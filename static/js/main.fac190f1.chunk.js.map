{"version":3,"sources":["components/CreateArea.module.css","components/EditArea.module.css","components/NavigationItem.module.css","components/Loading.module.css","components/Header.module.css","components/AddLabelItem.module.css","components/EditLabelsNavItem.module.css","components/Note.module.css","components/NotesPage.module.css","firebase/firebase.js","actions/ui.js","utils/firebaseToState.js","actions/actions.js","components/Button.js","components/AddLabelItem.js","components/AddLabels.js","components/ColorPopper.js","components/CreateArea.js","components/EditArea.js","components/ListItem.js","components/Note.js","selectors/notes.js","actions/filters.js","components/Header.js","actions/auth.js","components/NavigationItem.js","components/EditLabelsNavItem.js","components/SideBar.js","components/Backdrop.js","components/NotesPage.js","components/TrashPage.js","components/ArchivePage.js","components/NotFoundPage.js","components/LoginPage.js","components/EditLabel.js","components/EditLabels.js","components/Loading.js","App.js","reducers/notesReducer.js","reducers/filtersReducer.js","utils/localStorage.js","reducers/uiReducer.js","reducers/authReducer.js","index.js","store/configureStore.js","components/ColorPopper.module.css","components/TrashPage.module.css","components/ArchivePage.module.css","components/EditLabels.module.css","components/ListItem.module.css","components/SideBar.module.css","components/EditLabel.module.css","components/AddLabels.module.css","components/LoginPage.module.css"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","googleAuthProvider","auth","GoogleAuthProvider","syncingStart","type","syncSuccess","syncFail","transform","responseData","subData","notes","trash","archive","Object","values","map","note","labels","undefined","checked","unchecked","updateDatabase","dispatch","getState","route","uid","ref","set","main","then","catch","addNote","id","uuidv4","addNoteSync","deleteNote","deleteNoteSync","editNote","editNoteSync","archiveNote","archiveNoteSync","archiveDirectly","archiveDirectlySync","editAndArchive","oldNote","newNote","editAndArchiveSync","editAndUnarchive","editAndUnarchiveSync","addNewLabel","label","addNewLabelSync","addList","list","addListSync","Button","props","Tooltip","title","tooltipTitle","onClick","children","AddLabelItem","useState","filterLabel","setChecked","useEffect","chosenLabels","includes","clickHandler","prevChecked","className","classes","Checkbox","style","display","marginLeft","width","marginBottom","fontSize","connect","state","newLabel","setNewLabel","inputRef","useRef","current","focus","List","InputArea","onKeyPress","event","key","addNewChosenLabelHandler","Input","autoComplete","name","placeholder","value","onChange","target","maxLength","COLORS","COLOR_CLASSES","white","orange","yellow","green","turquoise","blue","darkblue","purple","pink","ColorPopper","Frame","color","index","changeColorHandler","colorToClass","initialChosenLabels","setTitle","content","setContent","isPinned","setPinned","setColor","checkedList","setCheckedList","uncheckedList","setUncheckedList","setChosenLabels","isExpanded","setExpanded","isNewNote","setNewNote","isNewList","setNewList","colorPopperLocation","setColorPopperLocation","popperLocation","setPopperLocation","colorOpen","Boolean","colorId","popperOpen","popperId","newColor","closeColorEditHandler","openPopperHandler","stopPropagation","oldPopperLocation","currentTarget","closePopperHandler","openColorEditHandler","oldColorPopperLocation","textAreaRef","newListItemRef","togglePinnedHandler","prevPinned","toggleLabelClickHandler","prevChosenLabels","filter","chosenLabel","createListToggleHandler","item","findIndex","listItem","prevUncheckedList","prevCheckedList","removeLabelFromNote","changeTitle","changeText","changeListItem","newCheckedList","newUncheckedList","newListHandler","cancelExpand","addNoteHandler","pinned","push","cancelNoteHandler","handleKeyPressForTitle","deleteListItem","enterHandlerForListItems","create","Form","position","Input2","PinButton","PinActive","PinInactive","TextareaAutosize","rowsMax","rows","top","right","Hidden","Fragment","Labels","Label","to","LabelText","verticalAlign","Buttons","ClickAwayListener","onClickAway","touchEvent","Popper","open","anchorEl","createList","Button2","length","textDecoration","Checkbox1","Input1","Button1","EditArea","labelPopperLocation","setlabelPopperLocation","isEditedNoteInArchive","confirmEditHandler","closeEdit","editAndArchiveHandler","editAndUnarchiveHandler","openLabelEditHandler","oldLabelPopperLocation","closeLabelEditHandler","popperRef","Form1","height","zIndex","modifiers","preventOverflow","escapeWithReference","disablePortal","overflowY","maxHeight","React","forwardRef","editable","Editable","NotEditable","unarchiveNote","unarchiveNoteSync","setLabelPopperLocation","labelOpen","labelId","colorClass","archiveButton","archived","Note","editing","editedId","Hide","showEditButton","wordWrap","Title","maxWidth","disabled","slice","newLabels","noteLabel","RemainingLabels","ButtonArea","deleteTooltip","restoreNote","labelItem","getVisibleNotes","labelName","searchText","labelMatch","labelsIncludeText","toLowerCase","contentIncludesText","searchTextMatch","colorMatch","setFilterText","filterText","setFilterColor","filterColor","text","filters","sidebarOpen","ui","sidebarOpenMobile","syncStatus","openSidebar","closeSidebar","startLogout","signOut","menu","console","log","clearSearch","syncButton","Cloud","class","Loader","Red","header","HamburgerMenu","Keeper","exact","Search","SearchButton","RightButtons","PaletteButton","ClearButton","LogoutButton","Logout","NavigationItem","activeClassName","active","path","iconName","paddingBottom","whiteSpace","textOverflow","overflow","EditLabelsNavItem","openEditLabels","SideBar","Open","Close","NavigationItems","Backdrop","left","backgroundColor","transparent","show","setEditedId","setEditing","editedNote","setEditedNote","editArea","editHandler","editedIndex","closeEditHandler","match","displayedNotes","pinnedNotes","unpinnedNotes","archivedNotes","noNotes","Empty","Icon","NotesPage","Notes","SearchResult","NotesWhenPinned","deleteNotePermanently","deleteNotePermanentlySync","restoreNoteSync","emptyTrash","displayedTrashNotes","noTrash","yesTrash","marginTop","isThereTrash","NotePage","displayedArchiveNotes","NotFoundPage","startLogin","signInWithPopup","Screen","editLabel","oldLabel","editLabelSync","deleteLabelCompletely","deleteLabelCompletelySync","setLabelName","dialogOpen","setDialogOpen","location","useLocation","history","useHistory","handleDialogClose","pathname","blur","paddingLeft","Dialog","onClose","aria-labelledby","DialogContent","DialogContentText","DialogActions","stye","padding","DoneButton","closeEditLabels","Loading","loader","createHistory","basename","loggingIn","editingLabels","setEditingLabels","routes","render","component","initialState","notesReducer","action","unpinnedNote1","editedNotes","editedArchive","editIndex","splice","unshift","archiveIndex","pinRemovedNoteArchive","unarchiveIndex","unarchivedArchive","deleteIndex","deletedNotes","deletedTrash","deletedArchive","pinRemovedNote","deleteIndexArchive","restoreIndex","restoredTrash","_","permDeleteIndex","newTrash","editLabelIndex","indexOf","editedLabels","editedLabelNotes","newLabelsOfNote","editedLabelTrash","newLabelsOfTrashNote","editedLabelArchive","newLabelsOfArchiveNote","deletedLabels","deletedLabelNotes","deletedLabelsOfNote","deletedLabelTrash","deletedLabelsOfTrash","deletedLabelArchive","deletedLabelsOfArchive","editedAndArchivedNotes","unpinnedNote2","editedAndArchivedArchive","editedAndUnarchivedArchive","editedAndUnarchivedNotes","loadedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","filtersReducer","uiReducer","authReducer","truth","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","hasRendered","renderApp","ReactDOM","document","getElementById","onAuthStateChanged","user","once","response","data","allLabels","createState","val","setMainState"],"mappings":"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","file":"static/js/main.fac190f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CreateArea_Form__Fk_GF\",\"Input\":\"CreateArea_Input__K8Vu_\",\"Input1\":\"CreateArea_Input1__3dLpg\",\"Input2\":\"CreateArea_Input2__1vv7k\",\"Hidden\":\"CreateArea_Hidden__2dUuM\",\"PinButton\":\"CreateArea_PinButton__3sR5d\",\"PinInactive\":\"CreateArea_PinInactive__18ZEE\",\"PinActive\":\"CreateArea_PinActive__2qiJe\",\"Buttons\":\"CreateArea_Buttons__1lXPn\",\"Labels\":\"CreateArea_Labels__P1rrj\",\"Label\":\"CreateArea_Label__3urtT\",\"Button\":\"CreateArea_Button__1MFj-\",\"LabelText\":\"CreateArea_LabelText__3wOIu\",\"Checkbox\":\"CreateArea_Checkbox__3TwGB\",\"Checkbox1\":\"CreateArea_Checkbox1__1EKz6\",\"Button1\":\"CreateArea_Button1__Nhc-n\",\"Button2\":\"CreateArea_Button2__2LlV6\",\"white\":\"CreateArea_white__1LmfE\",\"red\":\"CreateArea_red__2DrBf\",\"orange\":\"CreateArea_orange__1ux3p\",\"yellow\":\"CreateArea_yellow__27qHh\",\"green\":\"CreateArea_green__1QfEM\",\"turquoise\":\"CreateArea_turquoise__1OHSb\",\"blue\":\"CreateArea_blue__1K8SX\",\"darkblue\":\"CreateArea_darkblue__1gBEV\",\"purple\":\"CreateArea_purple__1cLNX\",\"pink\":\"CreateArea_pink__z8WNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"EditArea_Form__502u3\",\"Form1\":\"EditArea_Form1__2JfjU\",\"Input\":\"EditArea_Input__1D-ps\",\"Input1\":\"EditArea_Input1___eMjw\",\"Input2\":\"EditArea_Input2__j-ncp\",\"PinButton\":\"EditArea_PinButton__1KVRb\",\"PinActive\":\"EditArea_PinActive__2iO2P\",\"PinInactive\":\"EditArea_PinInactive__3h1ff\",\"Buttons\":\"EditArea_Buttons__3OPh9\",\"Labels\":\"EditArea_Labels__ZkARN\",\"Label\":\"EditArea_Label__1xgCF\",\"Button\":\"EditArea_Button__JL86x\",\"LabelText\":\"EditArea_LabelText__3ZM4c\",\"Checkbox\":\"EditArea_Checkbox__26e8r\",\"Checkbox1\":\"EditArea_Checkbox1__2Nhv9\",\"Button1\":\"EditArea_Button1__KkL6m\",\"Button2\":\"EditArea_Button2__2eNw3\",\"white\":\"EditArea_white__1aw8n\",\"red\":\"EditArea_red__2Fojg\",\"orange\":\"EditArea_orange__2YQTD\",\"yellow\":\"EditArea_yellow__3mCDq\",\"green\":\"EditArea_green__1_qW4\",\"turquoise\":\"EditArea_turquoise__2oh_C\",\"blue\":\"EditArea_blue__KdU9m\",\"darkblue\":\"EditArea_darkblue__1cq0H\",\"purple\":\"EditArea_purple__29roS\",\"pink\":\"EditArea_pink__2Lz0i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3VnxU\",\"active\":\"NavigationItem_active__2eNnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Screen\":\"Loading_Screen__2FpFE\",\"loader\":\"Loading_loader__ziniC\",\"spin\":\"Loading_spin__3eu0P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3CX7O\",\"Search\":\"Header_Search__3qLDW\",\"RightButtons\":\"Header_RightButtons__33qgi\",\"HamburgerMenu\":\"Header_HamburgerMenu__bbtQd\",\"SearchButton\":\"Header_SearchButton__3bWG9\",\"ClearButton\":\"Header_ClearButton__2OjKL\",\"PaletteButton\":\"Header_PaletteButton__Pu02j\",\"LogoutButton\":\"Header_LogoutButton__3TNCg\",\"Logout\":\"Header_Logout__3wTzJ\",\"Cloud\":\"Header_Cloud__LMIKL\",\"Red\":\"Header_Red__388Ua\",\"Loader\":\"Header_Loader__1Fc-j\",\"spin\":\"Header_spin__Pnua8\",\"white\":\"Header_white__2Sj4L\",\"red\":\"Header_red__1Jnil\",\"orange\":\"Header_orange__1Vqke\",\"yellow\":\"Header_yellow__3MWbL\",\"green\":\"Header_green__SVKyP\",\"turquoise\":\"Header_turquoise__3HRGj\",\"blue\":\"Header_blue__24w10\",\"darkblue\":\"Header_darkblue__1t-TW\",\"purple\":\"Header_purple__3uwoI\",\"pink\":\"Header_pink__3hU2L\",\"Keeper\":\"Header_Keeper__111yY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkbox\":\"AddLabelItem_Checkbox__kqjGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"EditLabelsNavItem_NavigationItem__3wyFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Note\":\"Note_Note__3VOQ9\",\"white\":\"Note_white__2GGfC\",\"red\":\"Note_red__3Ee9O\",\"orange\":\"Note_orange__XtN6I\",\"yellow\":\"Note_yellow__1XV3q\",\"green\":\"Note_green__3MdUq\",\"turquoise\":\"Note_turquoise__3YSyb\",\"blue\":\"Note_blue__wKyYH\",\"darkblue\":\"Note_darkblue__1PLXq\",\"purple\":\"Note_purple__eqcMn\",\"pink\":\"Note_pink__3956n\",\"Hide\":\"Note_Hide__iE4xp\",\"Title\":\"Note_Title__29Qq9\",\"Labels\":\"Note_Labels__2mvhF\",\"ButtonArea\":\"Note_ButtonArea__3-Xys\",\"Label\":\"Note_Label__12gUw\",\"Button\":\"Note_Button__8exPz\",\"LabelText\":\"Note_LabelText__1oSp9\",\"PinButton\":\"Note_PinButton__3l6mH\",\"PinActive\":\"Note_PinActive__2fm-h\",\"PinInactive\":\"Note_PinInactive__14eHr\",\"RemainingLabels\":\"Note_RemainingLabels__1bjp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotesPage\":\"NotesPage_NotesPage__3R1G7\",\"Notes\":\"NotesPage_Notes__2uYKH\",\"NotesWhenPinned\":\"NotesPage_NotesWhenPinned__3_Ndd\",\"Empty\":\"NotesPage_Empty__1di4k\",\"Icon\":\"NotesPage_Icon__2mA-i\",\"Note\":\"NotesPage_Note__tMHbi\",\"SearchResult\":\"NotesPage_SearchResult__3pc3r\"};","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n// import database from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDi0uayCnnkGfMi8c0bbuR4aBodusy_IeI\",\r\n  authDomain: \"keeper-2de7a.firebaseapp.com\",\r\n  databaseURL: \"https://keeper-2de7a-default-rtdb.firebaseio.com\",\r\n  projectId: \"keeper-2de7a\",\r\n  storageBucket: \"keeper-2de7a.appspot.com\",\r\n  messagingSenderId: \"285902265326\",\r\n  appId: \"1:285902265326:web:18a53bf30d8be418eb4cff\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.database();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n// database.ref().set({\r\n//   name: \"kelay\",\r\n// });\r\n\r\nexport { firebase, googleAuthProvider, database };\r\n","export const openSidebar = () => ({ type: \"OPEN_SIDEBAR\" });\r\n\r\nexport const closeSidebar = () => ({ type: \"CLOSE_SIDEBAR\" });\r\n\r\nexport const syncingStart = () => ({ type: \"SYNCING_START\" });\r\n\r\nexport const syncSuccess = () => ({ type: \"SYNC_SUCCESS\" });\r\n\r\nexport const syncFail = () => ({ type: \"SYNC_FAIL\" });\r\n","export const transform = (responseData, type) => {\r\n  if (responseData) {\r\n    let subData = responseData.notes;\r\n    if (type === \"trash\") {\r\n      subData = responseData.trash;\r\n    } else if (type === \"archive\") {\r\n      subData = responseData.archive;\r\n    }\r\n    if (subData) {\r\n      return Object.values(subData).map((note) => {\r\n        let labels = [];\r\n        if (note.labels !== undefined) {\r\n          labels = Object.values(note.labels);\r\n        }\r\n        if (note.type === \"list\") {\r\n          let checked = [];\r\n          let unchecked = [];\r\n          if (note.checked !== undefined) {\r\n            checked = Object.values(note.checked);\r\n          }\r\n          if (note.unchecked !== undefined) {\r\n            unchecked = Object.values(note.unchecked);\r\n          }\r\n          return {\r\n            ...note,\r\n            labels: labels,\r\n            checked: checked,\r\n            unchecked: unchecked,\r\n          };\r\n        } else {\r\n          return { ...note, labels: labels };\r\n        }\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const createState = (data) => {\r\n  const notes = transform(data, \"notes\");\r\n  const trash = transform(data, \"trash\");\r\n  const archive = transform(data, \"archive\");\r\n  let allLabels = [];\r\n  if (data && data.labels !== undefined) {\r\n    allLabels = Object.values(data.labels);\r\n  }\r\n  const mainState = {\r\n    notes: notes,\r\n    trash: trash,\r\n    archive: archive,\r\n    labels: allLabels,\r\n  };\r\n  return mainState;\r\n};\r\n\r\nexport const updateDatabase = (\r\n  dispatch,\r\n  getState,\r\n  syncingStart,\r\n  syncSuccess,\r\n  syncFail,\r\n  firebase\r\n) => {\r\n  const uid = getState().auth.uid;\r\n  const route = \"/users/\" + uid;\r\n  dispatch(syncingStart());\r\n  firebase\r\n    .database()\r\n    .ref(route)\r\n    .set(getState().main)\r\n    .then(() => {\r\n      dispatch(syncSuccess());\r\n    })\r\n    .catch(() => {\r\n      dispatch(syncFail());\r\n    });\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { firebase } from \"../firebase/firebase\";\r\nimport { syncFail, syncingStart, syncSuccess } from \"./ui\";\r\nimport { updateDatabase } from \"../utils/firebaseToState\";\r\n\r\nexport const addNoteSync = (note) => ({\r\n  type: \"ADD\",\r\n  note: { ...note, id: uuidv4(), type: \"note\" },\r\n});\r\n\r\nexport const addNote = (note) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(addNoteSync(note));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n    // const uid = getState().auth.uid;\r\n    // const route = \"/users/\" + uid;\r\n    // dispatch(syncingStart());\r\n    // firebase\r\n    //   .database()\r\n    //   .ref(route)\r\n    //   .set(getState().main)\r\n    //   .then(() => {\r\n    //     dispatch(syncSuccess());\r\n    //   })\r\n    //   .catch(() => {\r\n    //     dispatch(syncFail());\r\n    //   });\r\n  };\r\n};\r\n\r\n//If you want put the data to database before putting it redux store\r\n// In many cases this makes much more sense. in this app I don't think it matters that much, if you catch errors and let the client know sync failed\r\n\r\n// export const addNote = (note) => {\r\n//   return (dispatch, getState) => {\r\n//     const oldState = getState().main;\r\n//     const newState = {\r\n//       ...oldState,\r\n//       notes: [note, ...oldState.notes],\r\n//     };\r\n//     const uid = getState().auth.uid;\r\n//     const route = \"/users/\" + uid + \".json\";\r\n//     axios.put(route, newState).then(() => {\r\n//       dispatch(setMainState(newState));\r\n//     });\r\n//   };\r\n// };\r\n\r\nexport const deleteNoteSync = (id) => ({ type: \"DELETE\", id: id });\r\n\r\nexport const deleteNote = (id) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(deleteNoteSync(id));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const deleteNotePermanentlySync = (id) => ({\r\n  type: \"DELETE_PERMANENTLY\",\r\n  id: id,\r\n});\r\n\r\nexport const deleteNotePermanently = (id) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(deleteNotePermanentlySync(id));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const editNoteSync = (id, note) => ({\r\n  type: \"EDIT\",\r\n  note: note,\r\n  id: id,\r\n});\r\n\r\nexport const editNote = (id, note) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(editNoteSync(id, note));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const archiveNoteSync = (note) => ({ type: \"ARCHIVE\", note: note });\r\n\r\nexport const archiveNote = (note) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(archiveNoteSync(note));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const archiveDirectlySync = (note) => ({\r\n  type: \"ARCHIVE_DIRECTLY\",\r\n  note: { ...note, id: uuidv4() },\r\n});\r\n\r\nexport const archiveDirectly = (note) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(archiveDirectlySync(note));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const editAndArchiveSync = (oldNote, newNote) => ({\r\n  type: \"EDIT_AND_ARCHIVE\",\r\n  oldNote: oldNote,\r\n  newNote: newNote,\r\n});\r\n\r\nexport const editAndArchive = (oldNote, newNote) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(editAndArchiveSync(oldNote, newNote));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const editAndUnarchiveSync = (oldNote, newNote) => ({\r\n  type: \"EDIT_AND_UNARCHIVE\",\r\n  oldNote: oldNote,\r\n  newNote: newNote,\r\n});\r\n\r\nexport const editAndUnarchive = (oldNote, newNote) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(editAndUnarchiveSync(oldNote, newNote));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const unarchiveNoteSync = (note) => ({ type: \"UNARCHIVE\", note: note });\r\n\r\nexport const unarchiveNote = (note) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(unarchiveNoteSync(note));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const restoreNoteSync = (id) => ({ type: \"RESTORE\", id: id });\r\n\r\nexport const restoreNote = (id) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(restoreNoteSync(id));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const emptyTrashSync = () => ({ type: \"EMPTY_TRASH\" });\r\n\r\nexport const emptyTrash = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch(emptyTrashSync());\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const addNewLabelSync = (label) => ({\r\n  type: \"ADD_NEW_LABEL\",\r\n  label: label,\r\n});\r\n\r\nexport const addNewLabel = (label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(addNewLabelSync(label));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\n//Deletes a label completely, from all notes, all trash notes, and from labels list\r\nexport const deleteLabelCompletelySync = (label) => ({\r\n  type: \"DELETE_LABEL_COMPLETELY\",\r\n  label: label,\r\n});\r\n\r\nexport const deleteLabelCompletely = (label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(deleteLabelCompletelySync(label));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const editLabelSync = (oldLabel, newLabel) => ({\r\n  type: \"EDIT_LABEL\",\r\n  oldLabel: oldLabel,\r\n  newLabel: newLabel,\r\n});\r\n\r\nexport const editLabel = (oldLabel, newLabel) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(editLabelSync(oldLabel, newLabel));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\n// export const listItemCheckedToggle = (noteId, listItem, checked) => ({type: \"LIST_ITEM_CHECKED_TOGGLE\", noteId: noteId, listItem: listItem, checked: checked});\r\n\r\nexport const addListSync = (list) => ({\r\n  type: \"ADD_LIST\",\r\n  list: { ...list, id: uuidv4() },\r\n});\r\n\r\nexport const addList = (list) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(addListSync(list));\r\n    updateDatabase(\r\n      dispatch,\r\n      getState,\r\n      syncingStart,\r\n      syncSuccess,\r\n      syncFail,\r\n      firebase\r\n    );\r\n  };\r\n};\r\n\r\nexport const setMainState = (state) => ({ type: \"SET_MAIN_STATE\", state });\r\n\r\n//Enden up not using, keep for reference\r\n// export const startInitNotes = () => {\r\n//   return (dispatch) => {\r\n//     axios.get(\"/state.json\").then((response) => {\r\n//       const state = createState(response.data);\r\n//       dispatch(setMainState(state));\r\n//     });\r\n//   };\r\n// };\r\n","import React from \"react\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <Tooltip title={props.tooltipTitle}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={props.onClick}\r\n      >\r\n        {props.children}\r\n      </button>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport default Button;","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./AddLabelItem.module.css\";\r\n\r\nfunction AddLabelItem(props) {\r\n  const [checked, setChecked] = useState(props.label === props.filterLabel);\r\n\r\n  useEffect (() => {\r\n    setChecked(props.chosenLabels.includes(props.label));\r\n  }, [props.chosenLabels, props.label]) \r\n\r\n  function toggleHandler() {\r\n    props.clickHandler(props.label, checked);\r\n    setChecked((prevChecked) => {\r\n      return !prevChecked;\r\n    });\r\n  }\r\n  return (\r\n    <li key={props.label} onClick={toggleHandler}>\r\n      <div className={classes.Checkbox}>\r\n        {checked ? (\r\n          <i className=\"far fa-check-square\"></i>\r\n        ) : (\r\n          <i className=\"far fa-square\"></i>\r\n        )}\r\n      </div>\r\n      <div style={{ display: \"inline-block\", marginLeft: \"25px\", width: \"85%\", marginBottom: \"6px\", fontSize: \"0.9em\" }}>\r\n        {props.label}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default AddLabelItem;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport classes from \"./AddLabels.module.css\";\r\nimport { addNewLabel } from \"../actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"./Button\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddLabelItem from \"./AddLabelItem\";\r\n\r\n\r\n\r\nfunction AddLabels(props) {\r\n  const [newLabel, setNewLabel] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  function changeNewLabel(event) {\r\n    setNewLabel(event.target.value);\r\n  }\r\n  useEffect (() => {\r\n    inputRef.current.focus();\r\n  }, []) \r\n  \r\n\r\n  function handleEnter(event) {\r\n    if (event.key === \"Enter\") {\r\n      props.addNewLabel(newLabel);\r\n      props.addNewChosenLabelHandler(newLabel);\r\n      setNewLabel(\"\");\r\n      inputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  \r\n    function addHandler () {\r\n      props.addNewLabel(newLabel);\r\n      props.addNewChosenLabelHandler(newLabel);\r\n      setNewLabel(\"\");\r\n      inputRef.current.focus()\r\n    }\r\n  \r\n\r\n  return (\r\n    <div className={classes.List}>\r\n      <div className={classes.InputArea}>\r\n      <input\r\n        ref={inputRef}\r\n        onKeyPress={handleEnter}\r\n        className={classes.Input}\r\n        autoComplete=\"off\"\r\n        name=\"label\"\r\n        placeholder=\"Add label...\"\r\n        value={newLabel}\r\n        onChange={changeNewLabel}\r\n        maxLength=\"40\"\r\n      />{\" \"}\r\n      <Button tooltipTitle=\"Create new label\" onClick={addHandler}>\r\n        <AddIcon />\r\n      </Button>\r\n      </div>\r\n      <ul>\r\n        {props.labels.map((label) => {\r\n          return (\r\n            <AddLabelItem key={label} label={label} clickHandler={props.clickHandler} filterLabel={props.filterLabel} chosenLabels={props.chosenLabels}/>\r\n            \r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    labels: state.main.labels,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewLabel: (label) => dispatch(addNewLabel(label)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddLabels);\r\n","import React from \"react\";\r\nimport classes from \"./ColorPopper.module.css\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst COLORS = [\r\n  \"white\",\r\n  \"orange\",\r\n  \"yellow\",\r\n  \"green\",\r\n  \"turquoise\",\r\n  \"blue\",\r\n  \"darkblue\",\r\n  \"purple\",\r\n  \"pink\",\r\n];\r\nconst COLOR_CLASSES = [\r\n  classes.white,\r\n  classes.orange,\r\n  classes.yellow,\r\n  classes.green,\r\n  classes.turquoise,\r\n  classes.blue,\r\n  classes.darkblue,\r\n  classes.purple,\r\n  classes.pink,\r\n];\r\nfunction ColorPopper(props) {\r\n  return (\r\n    <div className={classes.Frame}>\r\n      <div style={{ display: \"flex-box\", width: \"103px\" }}>\r\n        {COLORS.map((color, index) => {\r\n          return (\r\n            <Tooltip key={color} title={color}>\r\n              <div className={classes.Button + \" \" +COLOR_CLASSES[index]} onClick={() => props.changeColorHandler(color)}></div>\r\n            </Tooltip>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorPopper;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addNewLabel,\r\n  addNote,\r\n  addList,\r\n  archiveDirectly,\r\n} from \"../actions/actions\";\r\nimport classes from \"./CreateArea.module.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Button from \"./Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport LabelIcon from \"@material-ui/icons/Label\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\nimport CheckBoxOutlinedIcon from \"@material-ui/icons/CheckBoxOutlined\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport AddLabels from \"./AddLabels\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PaletteIcon from \"@material-ui/icons/Palette\";\r\nimport ColorPopper from \"./ColorPopper\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\n// import Tooltip from \"@material-ui/core/Tooltip\";\r\n// import ListCreateArea from \"./ListCreateArea\";\r\n\r\nfunction colorToClass(color) {\r\n  switch (color) {\r\n    case \"white\":\r\n      return classes.white;\r\n\r\n    case \"orange\":\r\n      return classes.orange;\r\n\r\n    case \"yellow\":\r\n      return classes.yellow;\r\n\r\n    case \"green\":\r\n      return classes.green;\r\n\r\n    case \"turquoise\":\r\n      return classes.turquoise;\r\n\r\n    case \"blue\":\r\n      return classes.blue;\r\n\r\n    case \"darkblue\":\r\n      return classes.darkblue;\r\n\r\n    case \"purple\":\r\n      return classes.purple;\r\n\r\n    case \"pink\":\r\n      return classes.pink;\r\n\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction CreateArea(props) {\r\n  let initialChosenLabels = [];\r\n  if (props.filterLabel !== \"\") {\r\n    initialChosenLabels = [props.filterLabel];\r\n  }\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [isPinned, setPinned] = useState(false);\r\n  const [color, setColor] = useState(\"white\");\r\n  const [checkedList, setCheckedList] = useState([]);\r\n  const [uncheckedList, setUncheckedList] = useState([]);\r\n  const [chosenLabels, setChosenLabels] = useState(initialChosenLabels);\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const [isNewNote, setNewNote] = useState(false);\r\n  const [isNewList, setNewList] = useState(false);\r\n  const [colorPopperLocation, setColorPopperLocation] = useState(null);\r\n  const [popperLocation, setPopperLocation] = useState(null);\r\n\r\n  let colorOpen = Boolean(colorPopperLocation);\r\n  let colorId = colorOpen ? \"simple-popper\" : undefined;\r\n\r\n  let popperOpen = Boolean(popperLocation);\r\n  let popperId = popperOpen ? \"simple-popperrr\" : undefined;\r\n\r\n  function changeColorHandler(newColor) {\r\n    if (newColor !== color) {\r\n      setColor(newColor);\r\n    }\r\n    closeColorEditHandler();\r\n  }\r\n\r\n  function openPopperHandler(event) {\r\n    event.stopPropagation();\r\n    setPopperLocation((oldPopperLocation) => {\r\n      return oldPopperLocation ? null : event.currentTarget;\r\n    });\r\n    setColorPopperLocation(null);\r\n  }\r\n\r\n  function closePopperHandler() {\r\n    setPopperLocation(null);\r\n    popperOpen = false;\r\n  }\r\n\r\n  function openColorEditHandler(event) {\r\n    event.stopPropagation();\r\n    setColorPopperLocation((oldColorPopperLocation) => {\r\n      return oldColorPopperLocation ? null : event.currentTarget;\r\n    });\r\n    setPopperLocation(null);\r\n  }\r\n\r\n  function closeColorEditHandler() {\r\n    setColorPopperLocation(null);\r\n    colorOpen = false;\r\n  }\r\n\r\n  const textAreaRef = useRef(null);\r\n  const newListItemRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (textAreaRef.current && isExpanded) {\r\n      textAreaRef.current.focus();\r\n    }\r\n    if (newListItemRef.current && isExpanded) {\r\n      newListItemRef.current.focus();\r\n    }\r\n  }, [isNewList, isExpanded]);\r\n\r\n  function togglePinnedHandler() {\r\n    setPinned((prevPinned) => {\r\n      return !prevPinned;\r\n    });\r\n  }\r\n\r\n  function toggleLabelClickHandler(label, checked) {\r\n    if (checked) {\r\n      setChosenLabels((prevChosenLabels) => {\r\n        return prevChosenLabels.filter((chosenLabel) => {\r\n          return label !== chosenLabel;\r\n        });\r\n      });\r\n    } else {\r\n      setChosenLabels((prevChosenLabels) => {\r\n        return [label, ...prevChosenLabels];\r\n      });\r\n    }\r\n  }\r\n\r\n  function createListToggleHandler(item) {\r\n    const index = uncheckedList.findIndex((listItem) => {\r\n      return item.id === listItem.id;\r\n    });\r\n    if (index > -1) {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return prevUncheckedList.filter((listItem) => {\r\n          return listItem.id !== item.id;\r\n        });\r\n      });\r\n      setCheckedList((prevCheckedList) => {\r\n        return [item, ...prevCheckedList];\r\n      });\r\n    } else {\r\n      setCheckedList((prevCheckedList) => {\r\n        return prevCheckedList.filter((listItem) => {\r\n          return listItem.id !== item.id;\r\n        });\r\n      });\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return [...prevUncheckedList, item];\r\n      });\r\n    }\r\n  }\r\n\r\n  function addNewChosenLabelHandler(label) {\r\n    if (label !== \"\" && !chosenLabels.includes(label)) {\r\n      setChosenLabels((prevChosenLabels) => {\r\n        return [label, ...prevChosenLabels];\r\n      });\r\n    }\r\n  }\r\n\r\n  function removeLabelFromNote(label) {\r\n    setChosenLabels((prevChosenLabels) => {\r\n      return prevChosenLabels.filter((chosenLabel) => {\r\n        return label !== chosenLabel;\r\n      });\r\n    });\r\n  }\r\n\r\n  function changeTitle(event) {\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function changeText(event) {\r\n    setContent(event.target.value);\r\n  }\r\n\r\n  function changeListItem(event, index, checked) {\r\n    if (checked) {\r\n      setCheckedList((prevCheckedList) => {\r\n        const newCheckedList = [...prevCheckedList];\r\n        newCheckedList[index] = {\r\n          item: event.target.value,\r\n          id: prevCheckedList[index].id,\r\n        };\r\n        return newCheckedList;\r\n      });\r\n    } else {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        const newUncheckedList = [...prevUncheckedList];\r\n        newUncheckedList[index] = {\r\n          item: event.target.value,\r\n          id: prevUncheckedList[index].id,\r\n        };\r\n        return newUncheckedList;\r\n      });\r\n    }\r\n  }\r\n\r\n  function expand() {\r\n    if (!isExpanded) {\r\n      setNewNote(true);\r\n      setExpanded(true);\r\n      setNewList(false);\r\n    }\r\n  }\r\n  function hideCheckboxes() {\r\n    setNewNote(true);\r\n    setNewList(false);\r\n    setUncheckedList([]);\r\n    setCheckedList([]);\r\n  }\r\n\r\n  function newListHandler() {\r\n    setNewNote(false);\r\n    setExpanded(true);\r\n    setNewList(true);\r\n  }\r\n\r\n  function cancelExpand() {\r\n    closeColorEditHandler();\r\n    closePopperHandler();\r\n    setExpanded(false);\r\n    setNewNote(false);\r\n    setNewList(false);\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setColor(\"white\");\r\n    setPinned(false);\r\n    setChosenLabels(initialChosenLabels);\r\n  }\r\n\r\n  function addNoteHandler() {\r\n    if (isNewNote) {\r\n      props.addNote({\r\n        type: \"note\",\r\n        title: title,\r\n        content: content,\r\n        labels: chosenLabels,\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    } else if (isNewList) {\r\n      const newUncheckedList = [...uncheckedList];\r\n      if (content !== \"\") {\r\n        newUncheckedList.push({ item: content, id: uuidv4() });\r\n      }\r\n\r\n      props.addList({\r\n        type: \"list\",\r\n        title: title,\r\n        checked: checkedList,\r\n        unchecked: newUncheckedList,\r\n        labels: chosenLabels,\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    }\r\n    closePopperHandler();\r\n    closeColorEditHandler();\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setColor(\"white\");\r\n    setPinned(false);\r\n    setCheckedList([]);\r\n    setUncheckedList([]);\r\n    setExpanded(false);\r\n    setNewNote(false);\r\n    setNewList(false);\r\n    setChosenLabels(initialChosenLabels);\r\n  }\r\n\r\n  function archiveDirectly() {\r\n    if (isNewNote) {\r\n      props.archiveDirectly({\r\n        type: \"note\",\r\n        title: title,\r\n        content: content,\r\n        labels: chosenLabels,\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    } else if (isNewList) {\r\n      const newUncheckedList = [...uncheckedList];\r\n      if (content !== \"\") {\r\n        newUncheckedList.push({ item: content, id: uuidv4() });\r\n      }\r\n\r\n      props.archiveDirectly({\r\n        type: \"list\",\r\n        title: title,\r\n        checked: checkedList,\r\n        unchecked: newUncheckedList,\r\n        labels: chosenLabels,\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    }\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setColor(\"white\");\r\n    setPinned(false);\r\n    setCheckedList([]);\r\n    setUncheckedList([]);\r\n    setExpanded(false);\r\n    setNewNote(false);\r\n    setNewList(false);\r\n    setChosenLabels(initialChosenLabels);\r\n    closeColorEditHandler();\r\n    closePopperHandler();\r\n  }\r\n\r\n  function cancelNoteHandler() {\r\n    setTitle(\"\");\r\n    setPinned(false);\r\n    setContent(\"\");\r\n    setCheckedList([]);\r\n    setUncheckedList([]);\r\n    setExpanded(false);\r\n    setNewNote(false);\r\n    setNewList(false);\r\n    setChosenLabels(initialChosenLabels);\r\n    closeColorEditHandler();\r\n    closePopperHandler();\r\n  }\r\n\r\n  function handleKeyPressForTitle(event) {\r\n    if (event.key === \"Enter\") {\r\n      if (textAreaRef.current) {\r\n        textAreaRef.current.focus();\r\n      } else if (newListItemRef.current) {\r\n        newListItemRef.current.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleKeyPressForListItem(event) {\r\n    if (event.key === \"Enter\" && content !== \"\") {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return [...prevUncheckedList, { item: content, id: uuidv4() }];\r\n      });\r\n      setContent(\"\");\r\n    }\r\n    newListItemRef.current.focus();\r\n  }\r\n\r\n  function addNewListItem() {\r\n    if (content !== \"\") {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return [...prevUncheckedList, { item: content, id: uuidv4() }];\r\n      });\r\n      setContent(\"\");\r\n    }\r\n    newListItemRef.current.focus();\r\n  }\r\n\r\n  function addCheckedListItem() {\r\n    if (content !== \"\") {\r\n      setCheckedList((prevCheckedList) => {\r\n        return [...prevCheckedList, { item: content, id: uuidv4() }];\r\n      });\r\n      setContent(\"\");\r\n      // textAreaRef.current.focus();\r\n    }\r\n    newListItemRef.current.focus();\r\n  }\r\n\r\n  function deleteListItem(item) {\r\n    if (checkedList.includes(item)) {\r\n      setCheckedList((prevCheckedList) => {\r\n        return prevCheckedList.filter((listItem) => {\r\n          return listItem.id !== item.id;\r\n        });\r\n      });\r\n    } else {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return prevUncheckedList.filter((listItem) => {\r\n          return listItem.id !== item.id;\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function onClickAwayHandler() {\r\n    if (isNewNote) {\r\n      if (title === \"\" && content === \"\") {\r\n        cancelExpand();\r\n      } else {\r\n        addNoteHandler();\r\n      }\r\n    } else {\r\n      if (\r\n        title === \"\" &&\r\n        checkedList.length === 0 &&\r\n        uncheckedList.length === 0 &&\r\n        content === \"\"\r\n      ) {\r\n        cancelExpand();\r\n      } else {\r\n        addNoteHandler();\r\n      }\r\n    }\r\n  }\r\n  function enterHandlerForListItems(event) {\r\n    if (event.key === \"Enter\") {\r\n      newListItemRef.current.focus();\r\n    }\r\n  }\r\n  \r\n\r\n  //Create Note Area\r\n  let create = (\r\n    <div className={classes.Form + \" \" + colorToClass(color)}>\r\n      {isNewNote || isNewList ? (\r\n        <div style={{ position: \"relative\" }}>\r\n          <input\r\n            className={classes.Input2}\r\n            // style={{ width: \"90%\" }}\r\n            onKeyPress={handleKeyPressForTitle}\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={changeTitle}\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n          />\r\n          <div className={classes.PinButton}>\r\n            <Button tooltipTitle=\"Pin note\" onClick={togglePinnedHandler}>\r\n              <i\r\n                className={\r\n                  \"fas fa-thumbtack\" +\r\n                  (isPinned\r\n                    ? \" \" + classes.PinActive\r\n                    : \" \" + classes.PinInactive)\r\n                }\r\n              ></i>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <div\r\n        style={{ width: \"100%\", display: \"inline-block\", position: \"relative\" }}\r\n      >\r\n        <TextareaAutosize\r\n          rowsMax={16}\r\n          ref={textAreaRef}\r\n          onClick={() => {\r\n            expand();\r\n          }}\r\n          value={content}\r\n          onChange={changeText}\r\n          name=\"content\"\r\n          placeholder=\"Take a note...\"\r\n          rows=\"1\"\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"inline-block\",\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"5px\",\r\n          }}\r\n          className={isNewNote ? classes.Hidden : null}\r\n        >\r\n          <Button tooltipTitle=\"New List\" onClick={newListHandler}>\r\n            <CheckBoxOutlinedIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {isNewNote ? (\r\n        <React.Fragment>\r\n          <div className={classes.Labels}>\r\n            {chosenLabels.map((label) => {\r\n              return (\r\n                <div key={label} className={classes.Label}>\r\n                  <Link to={\"/label/\" + label}>\r\n                    <div className={classes.LabelText}>{label}</div>\r\n                  </Link>\r\n                  <div className={classes.Button}>\r\n                    <Button\r\n                      tooltipTitle=\"Delete label\"\r\n                      onClick={() => removeLabelFromNote(label)}\r\n                    >\r\n                      <span\r\n                        className=\"material-icons-outlined\"\r\n                        style={{\r\n                          verticalAlign: \"middle\",\r\n                          display: \"inline-block\",\r\n                          fontSize: \"15px\",\r\n                        }}\r\n                      >\r\n                        close\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={classes.Buttons}>\r\n            <Button tooltipTitle=\"Add Note\" onClick={addNoteHandler}>\r\n              <AddCircleIcon />\r\n            </Button>\r\n            <Button tooltipTitle=\"Cancel\" onClick={cancelNoteHandler}>\r\n              <CancelIcon />\r\n            </Button>\r\n            <Button tooltipTitle=\"Archive\" onClick={archiveDirectly}>\r\n              <ArchiveIcon />\r\n            </Button>\r\n            <Button tooltipTitle=\"Add Labels\" onClick={openPopperHandler}>\r\n              <LabelIcon />\r\n            </Button>\r\n            <Button tooltipTitle=\"Show checkboxes\" onClick={newListHandler}>\r\n              <CheckBoxIcon />\r\n            </Button>\r\n            <Button tooltipTitle=\"Change Color\" onClick={openColorEditHandler}>\r\n              <PaletteIcon />\r\n            </Button>\r\n          </div>\r\n          <ClickAwayListener onClickAway={closeColorEditHandler} touchEvent={false}>\r\n            <Popper\r\n              id={colorId}\r\n              open={colorOpen}\r\n              anchorEl={colorPopperLocation}\r\n              // disablePortal\r\n            >\r\n              <ColorPopper changeColorHandler={changeColorHandler} />\r\n            </Popper>\r\n          </ClickAwayListener>\r\n          <ClickAwayListener onClickAway={closePopperHandler} touchEvent={false}>\r\n            <Popper id={popperId} open={popperOpen} anchorEl={popperLocation}>\r\n              <AddLabels\r\n                chosenLabels={chosenLabels}\r\n                addNewChosenLabelHandler={addNewChosenLabelHandler}\r\n                clickHandler={toggleLabelClickHandler}\r\n                filterLabel={props.filterLabel}\r\n              />\r\n              {/* <ColorPopper changeColorHandler={changeColorHandler} /> */}\r\n            </Popper>\r\n          </ClickAwayListener>\r\n        </React.Fragment>\r\n      ) : null}\r\n    </div>\r\n  );\r\n  //Create List Area\r\n\r\n  const createList = (\r\n    <div className={classes.Form + \" \" + colorToClass(color)}>\r\n      <div style={{ position: \"relative\" }}>\r\n        <input\r\n          type=\"text\"\r\n          // style={{ width: \"90%\" }}\r\n          className={classes.Input2}\r\n          onKeyPress={handleKeyPressForTitle}\r\n          autoComplete=\"off\"\r\n          value={title}\r\n          onChange={changeTitle}\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n        />\r\n        <div className={classes.PinButton}>\r\n          <Button tooltipTitle=\"Pin note\" onClick={togglePinnedHandler}>\r\n            <i\r\n              className={\r\n                \"fas fa-thumbtack\" +\r\n                (isPinned ? \" \" + classes.PinActive : \" \" + classes.PinInactive)\r\n              }\r\n            ></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {uncheckedList.map((item, index) => {\r\n        return (\r\n          <div key={item.id} style={{ position: \"relative\" }}>\r\n            <div\r\n              className={classes.Checkbox}\r\n              onClick={() => createListToggleHandler(item)}\r\n            >\r\n              <i className=\"far fa-square\"></i>\r\n            </div>\r\n            <input\r\n              onKeyPress={enterHandlerForListItems}\r\n              autoComplete=\"off\"\r\n              className={classes.Input}\r\n              value={item.item}\r\n              onChange={(event) => changeListItem(event, index, false)}\r\n              name=\"content\"\r\n              placeholder=\"Empty list item...\"\r\n              rows=\"1\"\r\n            />\r\n            <div className={classes.Button2}>\r\n              <Button\r\n                tooltipTitle=\"Delete List Item\"\r\n                onClick={() => deleteListItem(item)}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {checkedList.length > 0 ? <hr /> : null}\r\n      {checkedList.map((item, index) => {\r\n        return (\r\n          <div key={item.id} style={{ position: \"relative\" }}>\r\n            <div\r\n              className={classes.Checkbox}\r\n              onClick={() => createListToggleHandler(item)}\r\n            >\r\n              <i className=\"far fa-check-square\"></i>\r\n            </div>\r\n            <input\r\n              onKeyPress={enterHandlerForListItems}\r\n              autoComplete=\"off\"\r\n              style={\r\n                item.item === \"\" ? null : { textDecoration: \"line-through\" }\r\n              }\r\n              className={classes.Input}\r\n              value={item.item}\r\n              onChange={(event) => changeListItem(event, index, true)}\r\n              name=\"content\"\r\n              placeholder=\"Empty list item...\"\r\n              rows=\"1\"\r\n            />\r\n            <div className={classes.Button2}>\r\n              <Button\r\n                tooltipTitle=\"Delete List Item\"\r\n                onClick={() => deleteListItem(item)}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{ position: \"relative\" }}>\r\n        <div className={classes.Checkbox1}>\r\n          <i className=\"far fa-square\" onClick={addCheckedListItem}></i>\r\n        </div>\r\n        <input\r\n          autoComplete=\"off\"\r\n          className={classes.Input1}\r\n          ref={newListItemRef}\r\n          onKeyPress={handleKeyPressForListItem}\r\n          value={content}\r\n          onChange={changeText}\r\n          name=\"content\"\r\n          placeholder=\"Add list item...\"\r\n        />\r\n        <div className={classes.Button1}>\r\n          <Button tooltipTitle=\"Add list item\" onClick={addNewListItem}>\r\n            <AddIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <React.Fragment>\r\n        <div className={classes.Labels}>\r\n          {chosenLabels.map((label) => {\r\n            return (\r\n              <div key={label} className={classes.Label}>\r\n                <Link to={\"/label/\" + label}>\r\n                  <div className={classes.LabelText}>{label}</div>\r\n                </Link>\r\n                <div className={classes.Button}>\r\n                  <Button\r\n                    tooltipTitle=\"Delete label\"\r\n                    onClick={() => removeLabelFromNote(label)}\r\n                  >\r\n                    <span\r\n                      className=\"material-icons-outlined\"\r\n                      style={{\r\n                        verticalAlign: \"middle\",\r\n                        display: \"inline-block\",\r\n                        fontSize: \"15px\",\r\n                      }}\r\n                    >\r\n                      close\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={classes.Buttons}>\r\n          <Button tooltipTitle=\"Add Note\" onClick={addNoteHandler}>\r\n            <AddCircleIcon />\r\n          </Button>\r\n          <Button tooltipTitle=\"Cancel\" onClick={cancelNoteHandler}>\r\n            <CancelIcon />\r\n          </Button>\r\n          <Button tooltipTitle=\"Archive\" onClick={archiveDirectly}>\r\n            <ArchiveIcon />\r\n          </Button>\r\n          <Button tooltipTitle=\"Add Labels\" onClick={openPopperHandler}>\r\n            <LabelIcon />\r\n          </Button>\r\n          <Button tooltipTitle=\"Hide checkboxes\" onClick={hideCheckboxes}>\r\n            <NoteIcon />\r\n          </Button>\r\n          <Button tooltipTitle=\"Change Color\" onClick={openColorEditHandler}>\r\n            <PaletteIcon />\r\n          </Button>\r\n        </div>\r\n\r\n        <ClickAwayListener onClickAway={closeColorEditHandler} touchEvent={false}>\r\n          <Popper\r\n            id={colorId}\r\n            open={colorOpen}\r\n            anchorEl={colorPopperLocation}\r\n            // disablePortal\r\n          >\r\n            <ColorPopper changeColorHandler={changeColorHandler} />\r\n          </Popper>\r\n        </ClickAwayListener>\r\n        <ClickAwayListener onClickAway={closePopperHandler} touchEvent={false}>\r\n          <Popper id={popperId} open={popperOpen} anchorEl={popperLocation}>\r\n            <AddLabels\r\n              chosenLabels={chosenLabels}\r\n              addNewChosenLabelHandler={addNewChosenLabelHandler}\r\n              clickHandler={toggleLabelClickHandler}\r\n              filterLabel={props.filterLabel}\r\n            />\r\n            {/* <ColorPopper changeColorHandler={changeColorHandler} /> */}\r\n          </Popper>\r\n        </ClickAwayListener>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={onClickAwayHandler}>\r\n      {isNewList ? createList : create}\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    labels: state.main.labels,\r\n    notes: state.main.notes,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNote: (note) => dispatch(addNote(note)),\r\n    archiveDirectly: (note) => dispatch(archiveDirectly(note)),\r\n    addNewLabel: (label) => dispatch(addNewLabel(label)),\r\n    addList: (list) => dispatch(addList(list)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateArea);\r\n","import React, { useState, useRef } from \"react\";\r\nimport classes from \"./EditArea.module.css\";\r\nimport Button from \"./Button\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport LabelIcon from \"@material-ui/icons/Label\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport AddLabels from \"./AddLabels\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PaletteIcon from \"@material-ui/icons/Palette\";\r\nimport ColorPopper from \"./ColorPopper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport UnarchiveIcon from \"@material-ui/icons/Unarchive\";\r\n\r\nfunction colorToClass(color) {\r\n  switch (color) {\r\n    case \"white\":\r\n      return classes.white;\r\n\r\n    case \"orange\":\r\n      return classes.orange;\r\n\r\n    case \"yellow\":\r\n      return classes.yellow;\r\n\r\n    case \"green\":\r\n      return classes.green;\r\n\r\n    case \"turquoise\":\r\n      return classes.turquoise;\r\n\r\n    case \"blue\":\r\n      return classes.blue;\r\n\r\n    case \"darkblue\":\r\n      return classes.darkblue;\r\n\r\n    case \"purple\":\r\n      return classes.purple;\r\n\r\n    case \"pink\":\r\n      return classes.pink;\r\n\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction EditArea(props, ref) {\r\n  const [title, setTitle] = useState(props.note.title);\r\n  const [content, setContent] = useState(\r\n    props.note.content ? props.note.content : \"\"\r\n  );\r\n  const [isPinned, setPinned] = useState(props.note.pinned);\r\n  const [checkedList, setCheckedList] = useState(\r\n    props.note.checked ? props.note.checked : []\r\n  );\r\n  const [uncheckedList, setUncheckedList] = useState(\r\n    props.note.unchecked ? props.note.unchecked : []\r\n  );\r\n  const [labelPopperLocation, setlabelPopperLocation] = useState(null);\r\n  const [chosenLabels, setChosenLabels] = useState(props.note.labels);\r\n  const [color, setColor] = useState(props.note.color);\r\n  const [colorPopperLocation, setColorPopperLocation] = useState(null);\r\n\r\n  let colorOpen = Boolean(colorPopperLocation);\r\n  let colorId = colorOpen ? \"simple-popper\" : undefined;\r\n\r\n  const open = Boolean(labelPopperLocation);\r\n  const id = open ? \"simple-popper1\" : undefined;\r\n\r\n  const textAreaRef = useRef(null);\r\n  // const newListItemRef = useRef(null);\r\n\r\n  const editedIndexInArchive = props.archive.findIndex((note) => {\r\n    return props.note.id === note.id;\r\n  });\r\n\r\n  const isEditedNoteInArchive = editedIndexInArchive > -1;\r\n\r\n  function changeColorHandler(newColor) {\r\n    if (newColor !== color) {\r\n      setColor(newColor);\r\n    }\r\n    closeColorEditHandler();\r\n  }\r\n\r\n  function openColorEditHandler(event) {\r\n    event.stopPropagation();\r\n    setColorPopperLocation((oldColorPopperLocation) => {\r\n      return oldColorPopperLocation ? null : event.currentTarget;\r\n    });\r\n    setlabelPopperLocation(null);\r\n  }\r\n\r\n  function closeColorEditHandler() {\r\n    setColorPopperLocation(null);\r\n  }\r\n\r\n  function confirmEditHandler() {\r\n    if (props.note.type === \"note\") {\r\n      props.editNote(props.note.id, {\r\n        title: title,\r\n        content: content,\r\n        id: props.note.id,\r\n        labels: chosenLabels,\r\n        type: \"note\",\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    } else {\r\n      const newUncheckedList = [...uncheckedList];\r\n      if (content !== \"\") {\r\n        newUncheckedList.push({ item: content, id: uuidv4() });\r\n      }\r\n      props.editNote(props.note.id, {\r\n        title: title,\r\n        checked: checkedList,\r\n        unchecked: newUncheckedList,\r\n        id: props.note.id,\r\n        labels: chosenLabels,\r\n        type: \"list\",\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    }\r\n\r\n    props.closeEdit();\r\n  }\r\n\r\n  function editAndArchiveHandler() {\r\n    if (props.note.type === \"note\") {\r\n      props.editAndArchive(props.note, {\r\n        title: title,\r\n        content: content,\r\n        id: props.note.id,\r\n        labels: chosenLabels,\r\n        type: \"note\",\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    } else {\r\n      const newUncheckedList = [...uncheckedList];\r\n      if (content !== \"\") {\r\n        newUncheckedList.push({ item: content, id: uuidv4() });\r\n      }\r\n      props.editAndArchive(props.note, {\r\n        title: title,\r\n        checked: checkedList,\r\n        unchecked: newUncheckedList,\r\n        id: props.note.id,\r\n        labels: chosenLabels,\r\n        type: \"list\",\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    }\r\n\r\n    props.closeEdit();\r\n  }\r\n\r\n  function editAndUnarchiveHandler() {\r\n    if (props.note.type === \"note\") {\r\n      props.editAndUnarchive(props.note, {\r\n        title: title,\r\n        content: content,\r\n        id: props.note.id,\r\n        labels: chosenLabels,\r\n        type: \"note\",\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    } else {\r\n      const newUncheckedList = [...uncheckedList];\r\n      if (content !== \"\") {\r\n        newUncheckedList.push({ item: content, id: uuidv4() });\r\n      }\r\n      props.editAndUnarchive(props.note, {\r\n        title: title,\r\n        checked: checkedList,\r\n        unchecked: newUncheckedList,\r\n        id: props.note.id,\r\n        labels: chosenLabels,\r\n        type: \"list\",\r\n        pinned: isPinned,\r\n        color: color,\r\n      });\r\n    }\r\n\r\n    props.closeEdit();\r\n  }\r\n\r\n  ref.current = confirmEditHandler;\r\n  function enterHandlerForListItems(event) {\r\n    if (event.key === \"Enter\") {\r\n      textAreaRef.current.focus();\r\n    }\r\n  }\r\n\r\n  function openLabelEditHandler(event) {\r\n    event.stopPropagation();\r\n    setlabelPopperLocation((oldLabelPopperLocation) => {\r\n      return oldLabelPopperLocation ? null : event.currentTarget;\r\n      // event.currentTarget\r\n    });\r\n    setColorPopperLocation(null);\r\n  }\r\n\r\n  function closeLabelEditHandler() {\r\n    if (open) {\r\n      setlabelPopperLocation(null);\r\n    }\r\n  }\r\n\r\n  function addNewChosenLabelHandler(label) {\r\n    if (label !== \"\" && !chosenLabels.includes(label)) {\r\n      setChosenLabels((prevChosenLabels) => {\r\n        return [label, ...prevChosenLabels];\r\n      });\r\n    }\r\n  }\r\n\r\n  function removeLabelFromNote(label) {\r\n    setChosenLabels((prevChosenLabels) => {\r\n      return prevChosenLabels.filter((chosenLabel) => {\r\n        return label !== chosenLabel;\r\n      });\r\n    });\r\n  }\r\n\r\n  function toggleLabelClickHandler(label, checked) {\r\n    if (checked) {\r\n      setChosenLabels((prevChosenLabels) => {\r\n        return prevChosenLabels.filter((chosenLabel) => {\r\n          return label !== chosenLabel;\r\n        });\r\n      });\r\n    } else {\r\n      setChosenLabels((prevChosenLabels) => {\r\n        return [label, ...prevChosenLabels];\r\n      });\r\n    }\r\n  }\r\n  function createListToggleHandler(item) {\r\n    const index = uncheckedList.findIndex((listItem) => {\r\n      return item.id === listItem.id;\r\n    });\r\n    if (index > -1) {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return prevUncheckedList.filter((listItem) => {\r\n          return listItem.id !== item.id;\r\n        });\r\n      });\r\n      setCheckedList((prevCheckedList) => {\r\n        return [item, ...prevCheckedList];\r\n      });\r\n    } else {\r\n      setCheckedList((prevCheckedList) => {\r\n        return prevCheckedList.filter((listItem) => {\r\n          return listItem.id !== item.id;\r\n        });\r\n      });\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return [...prevUncheckedList, item];\r\n      });\r\n    }\r\n  }\r\n\r\n  function changeListItem(event, index, checked) {\r\n    if (checked) {\r\n      setCheckedList((prevCheckedList) => {\r\n        const newCheckedList = [...prevCheckedList];\r\n        newCheckedList[index] = {\r\n          item: event.target.value,\r\n          id: prevCheckedList[index].id,\r\n        };\r\n        return newCheckedList;\r\n      });\r\n    } else {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        const newUncheckedList = [...prevUncheckedList];\r\n        newUncheckedList[index] = {\r\n          item: event.target.value,\r\n          id: prevUncheckedList[index].id,\r\n        };\r\n        return newUncheckedList;\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleKeyPressForListItem(event) {\r\n    if (event.key === \"Enter\" && content !== \"\") {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return [...prevUncheckedList, { item: content, id: uuidv4() }];\r\n      });\r\n      setContent(\"\");\r\n    }\r\n    textAreaRef.current.focus();\r\n  }\r\n\r\n  function changeTitle(event) {\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function changeText(event) {\r\n    setContent(event.target.value);\r\n  }\r\n\r\n  function handleKeyPressForTitle(event) {\r\n    if (event.key === \"Enter\") {\r\n      textAreaRef.current.focus();\r\n    }\r\n  }\r\n  function addNewListItem() {\r\n    if (content !== \"\") {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return [...prevUncheckedList, { item: content, id: uuidv4() }];\r\n      });\r\n      setContent(\"\");\r\n    }\r\n    textAreaRef.current.focus();\r\n  }\r\n  function addCheckedListItem() {\r\n    if (content !== \"\") {\r\n      setCheckedList((prevCheckedList) => {\r\n        return [...prevCheckedList, { item: content, id: uuidv4() }];\r\n      });\r\n      setContent(\"\");\r\n      // textAreaRef.current.focus();\r\n    }\r\n    textAreaRef.current.focus();\r\n  }\r\n\r\n  function deleteListItem(item) {\r\n    if (checkedList.includes(item)) {\r\n      setCheckedList((prevCheckedList) => {\r\n        return prevCheckedList.filter((listItem) => {\r\n          return listItem.id !== item.id;\r\n        });\r\n      });\r\n    } else {\r\n      setUncheckedList((prevUncheckedList) => {\r\n        return prevUncheckedList.filter((listItem) => {\r\n          return listItem.id !== item.id;\r\n        });\r\n      });\r\n    }\r\n  }\r\n  function togglePinnedHandler() {\r\n    setPinned((prevPinned) => {\r\n      return !prevPinned;\r\n    });\r\n  }\r\n\r\n  const popperRef = useRef(null);\r\n  const create = (\r\n    <div className={classes.Form1} ref={popperRef}>\r\n      <div className={classes.Form + \" \" + colorToClass(color)}>\r\n        <div style={{ position: \"relative\" }}>\r\n          <input\r\n            type=\"text\"\r\n            className={classes.Input2}\r\n            value={title}\r\n            onChange={changeTitle}\r\n            onKeyPress={handleKeyPressForTitle}\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            autoComplete=\"Off\"\r\n          />\r\n          <div className={classes.PinButton}>\r\n            <Button tooltipTitle=\"Pin note\" onClick={togglePinnedHandler}>\r\n              <i\r\n                className={\r\n                  \"fas fa-thumbtack\" +\r\n                  (isPinned\r\n                    ? \" \" + classes.PinActive\r\n                    : \" \" + classes.PinInactive)\r\n                }\r\n              ></i>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ display: \"inline-block\", width: \"100%\", height: \"100%\" }}>\r\n          <TextareaAutosize\r\n            rowsMax={8}\r\n            ref={textAreaRef}\r\n            value={content}\r\n            onChange={changeText}\r\n            name=\"content\"\r\n            placeholder=\"Edit your note...\"\r\n          />\r\n        </div>\r\n        <React.Fragment>\r\n          <div className={classes.Labels}>\r\n            {chosenLabels.map((label) => {\r\n              return (\r\n                <div key={label} className={classes.Label}>\r\n                  <Link to={\"/label/\" + label}>\r\n                    <div className={classes.LabelText}>{label}</div>\r\n                  </Link>\r\n                  <div className={classes.Button}>\r\n                    <Button\r\n                      tooltipTitle=\"Delete label\"\r\n                      onClick={() => removeLabelFromNote(label)}\r\n                    >\r\n                      <span\r\n                        className=\"material-icons-outlined\"\r\n                        style={{\r\n                          verticalAlign: \"middle\",\r\n                          display: \"inline-block\",\r\n                          fontSize: \"15px\",\r\n                        }}\r\n                      >\r\n                        close\r\n                      </span>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className={classes.Buttons}>\r\n            <Button tooltipTitle=\"Confirm changes\" onClick={confirmEditHandler}>\r\n              <CheckCircleIcon />\r\n            </Button>\r\n            <Button tooltipTitle=\"Cancel\" onClick={props.closeEdit}>\r\n              <CancelIcon />\r\n            </Button>\r\n            {isEditedNoteInArchive ? (\r\n              <Button\r\n                tooltipTitle=\"unarchive\"\r\n                onClick={editAndUnarchiveHandler}\r\n              >\r\n                <UnarchiveIcon />\r\n              </Button>\r\n            ) : (\r\n              <Button tooltipTitle=\"Archive\" onClick={editAndArchiveHandler}>\r\n                <ArchiveIcon />\r\n              </Button>\r\n            )}\r\n            <Button tooltipTitle=\"Edit Labels\" onClick={openLabelEditHandler}>\r\n              <LabelIcon />\r\n            </Button>\r\n            <Button tooltipTitle=\"Change Color\" onClick={openColorEditHandler}>\r\n              <PaletteIcon />\r\n            </Button>\r\n          </div>\r\n        </React.Fragment>\r\n      </div>\r\n      <ClickAwayListener onClickAway={closeLabelEditHandler} touchEvent={false}>\r\n        <Popper\r\n          style={{ zIndex: \"500\" }}\r\n          id={id}\r\n          open={open}\r\n          anchorEl={labelPopperLocation}\r\n          modifiers={{\r\n            preventOverflow: {\r\n              escapeWithReference: false,\r\n            },\r\n          }}\r\n          disablePortal\r\n        >\r\n          <AddLabels\r\n            chosenLabels={chosenLabels}\r\n            addNewChosenLabelHandler={addNewChosenLabelHandler}\r\n            clickHandler={toggleLabelClickHandler}\r\n            filterLabel={props.filterLabel}\r\n          />\r\n        </Popper>\r\n      </ClickAwayListener>\r\n      <ClickAwayListener onClickAway={closeColorEditHandler} touchEvent={false}>\r\n        <Popper\r\n          id={colorId}\r\n          open={colorOpen}\r\n          anchorEl={colorPopperLocation}\r\n          disablePortal\r\n        >\r\n          <ColorPopper changeColorHandler={changeColorHandler} />\r\n        </Popper>\r\n      </ClickAwayListener>\r\n    </div>\r\n  );\r\n\r\n  const createList = (\r\n    <div className={classes.Form + \" \" + colorToClass(color)}>\r\n      <div style={{ position: \"relative\" }}>\r\n        <input\r\n          type=\"text\"\r\n          className={classes.Input2}\r\n          onKeyPress={handleKeyPressForTitle}\r\n          autoComplete=\"off\"\r\n          value={title}\r\n          onChange={changeTitle}\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n        />\r\n        <div className={classes.PinButton}>\r\n          <Button tooltipTitle=\"Pin note\" onClick={togglePinnedHandler}>\r\n            <i\r\n              className={\r\n                \"fas fa-thumbtack\" +\r\n                (isPinned ? \" \" + classes.PinActive : \" \" + classes.PinInactive)\r\n              }\r\n            ></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          overflowY: \"auto\",\r\n          maxHeight: \"315px\",\r\n          display: \"inline-block\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {uncheckedList.map((item, index) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div\r\n                className={classes.Checkbox}\r\n                onClick={() => createListToggleHandler(item)}\r\n              >\r\n                <i className=\"far fa-square\"></i>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                onKeyPress={enterHandlerForListItems}\r\n                autoComplete=\"off\"\r\n                className={classes.Input}\r\n                value={item.item}\r\n                onChange={(event) => changeListItem(event, index, false)}\r\n                name=\"content\"\r\n                placeholder=\"Empty list item...\"\r\n                rows=\"1\"\r\n              />\r\n              <div className={classes.Button2}>\r\n                <Button\r\n                  tooltipTitle=\"Delete List Item\"\r\n                  onClick={() => deleteListItem(item)}\r\n                >\r\n                  <CloseIcon fontSize=\"small\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        {checkedList.length > 0 ? <hr /> : null}\r\n        {checkedList.map((item, index) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div\r\n                className={classes.Checkbox}\r\n                onClick={() => createListToggleHandler(item)}\r\n              >\r\n                <i className=\"far fa-check-square\"></i>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                onKeyPress={enterHandlerForListItems}\r\n                autoComplete=\"off\"\r\n                style={\r\n                  item.item === \"\" ? null : { textDecoration: \"line-through\" }\r\n                }\r\n                className={classes.Input}\r\n                value={item.item}\r\n                onChange={(event) => changeListItem(event, index, true)}\r\n                name=\"content\"\r\n                placeholder=\"Empty list item...\"\r\n                rows=\"1\"\r\n              />\r\n              <div className={classes.Button2}>\r\n                <Button\r\n                  tooltipTitle=\"Delete List Item\"\r\n                  onClick={() => deleteListItem(item)}\r\n                >\r\n                  <CloseIcon fontSize=\"small\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div style={{ position: \"relative\" }}>\r\n        <div className={classes.Checkbox1}>\r\n          <i className=\"far fa-square\" onClick={addCheckedListItem}></i>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          className={classes.Input1}\r\n          ref={textAreaRef}\r\n          onKeyPress={handleKeyPressForListItem}\r\n          value={content}\r\n          onChange={changeText}\r\n          name=\"content\"\r\n          placeholder=\"Add list item...\"\r\n        />\r\n        <div className={classes.Button1}>\r\n          <Button tooltipTitle=\"Add list item\" onClick={addNewListItem}>\r\n            <AddIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <React.Fragment>\r\n        <div className={classes.Labels}>\r\n          {chosenLabels.map((label) => {\r\n            return (\r\n              <div key={label} className={classes.Label}>\r\n                <Link to={\"/label/\" + label}>\r\n                  <div className={classes.LabelText}>{label}</div>\r\n                </Link>\r\n                <div className={classes.Button}>\r\n                  <Button\r\n                    tooltipTitle=\"Delete label\"\r\n                    onClick={() => removeLabelFromNote(label)}\r\n                  >\r\n                    <span\r\n                      className=\"material-icons-outlined\"\r\n                      style={{\r\n                        verticalAlign: \"middle\",\r\n                        display: \"inline-block\",\r\n                        fontSize: \"15px\",\r\n                      }}\r\n                    >\r\n                      close\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={classes.Buttons}>\r\n          <Button tooltipTitle=\"Confirm Edit\" onClick={confirmEditHandler}>\r\n            <CheckCircleIcon />\r\n          </Button>\r\n          <Button tooltipTitle=\"Cancel\" onClick={props.closeEdit}>\r\n            <CancelIcon />\r\n          </Button>\r\n          {isEditedNoteInArchive ? (\r\n            <Button tooltipTitle=\"unarchive\" onClick={editAndUnarchiveHandler}>\r\n              <UnarchiveIcon />\r\n            </Button>\r\n          ) : (\r\n            <Button tooltipTitle=\"Archive\" onClick={editAndArchiveHandler}>\r\n              <ArchiveIcon />\r\n            </Button>\r\n          )}\r\n          <Button tooltipTitle=\"Add Labels\" onClick={openLabelEditHandler}>\r\n            <LabelIcon />\r\n          </Button>\r\n          <Button tooltipTitle=\"Change Color\" onClick={openColorEditHandler}>\r\n            <PaletteIcon />\r\n          </Button>\r\n        </div>\r\n      </React.Fragment>\r\n      <ClickAwayListener onClickAway={closeLabelEditHandler} touchEvent={false}>\r\n        <Popper\r\n          style={{ zIndex: \"500\" }}\r\n          id={id}\r\n          open={open}\r\n          anchorEl={labelPopperLocation}\r\n          modifiers={{\r\n            preventOverflow: {\r\n              escapeWithReference: false,\r\n            },\r\n          }}\r\n          disablePortal\r\n        >\r\n          <AddLabels\r\n            chosenLabels={chosenLabels}\r\n            addNewChosenLabelHandler={addNewChosenLabelHandler}\r\n            clickHandler={toggleLabelClickHandler}\r\n            filterLabel={props.filterLabel}\r\n          />\r\n        </Popper>\r\n      </ClickAwayListener>\r\n      <ClickAwayListener onClickAway={closeColorEditHandler} touchEvent={false}>\r\n        <Popper\r\n          id={colorId}\r\n          open={colorOpen}\r\n          anchorEl={colorPopperLocation}\r\n          disablePortal\r\n        >\r\n          <ColorPopper changeColorHandler={changeColorHandler} />\r\n        </Popper>\r\n      </ClickAwayListener>\r\n    </div>\r\n  );\r\n\r\n  return <div>{props.note.type === \"note\" ? create : createList}</div>;\r\n}\r\n\r\nexport default React.forwardRef(EditArea);\r\n","import React from \"react\";\r\nimport classes from \"./ListItem.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { editNote } from \"../actions/actions\";\r\n\r\nfunction ListItem(props) {\r\n  // function toggleHandler(event) {\r\n  //   props.listItemCheckedToggle(props.listId, props.item, props.checked);\r\n  //   event.stopPropagation();\r\n  // }\r\n\r\n  function toggleHandler(event) {\r\n    event.stopPropagation();\r\n    let checked = [...props.list.checked];\r\n    let unchecked = [...props.list.unchecked];\r\n    if (props.checked) {\r\n      checked = checked.filter((item) => {\r\n        return item.id !== props.item.id;\r\n      });\r\n      unchecked = [...unchecked, { ...props.item }];\r\n    } else {\r\n      unchecked = unchecked.filter((item) => {\r\n        return item.id !== props.item.id;\r\n      });\r\n      checked = [{ ...props.item }, ...checked];\r\n    }\r\n    const newNote = {\r\n      ...props.list,\r\n      checked: checked,\r\n      unchecked: unchecked,\r\n    };\r\n    props.editNote(props.list.id, newNote);\r\n  }\r\n  return (\r\n    <li>\r\n      <div\r\n        className={\r\n          props.editable\r\n            ? classes.Editable + \" \" + classes.Checkbox\r\n            : classes.NotEditable + \" \" + classes.Checkbox\r\n        }\r\n        onClick={props.editable ? toggleHandler : null}\r\n      >\r\n        {props.checked ? (\r\n          <i className=\"far fa-check-square\"></i>\r\n        ) : (\r\n          <i className=\"far fa-square\"></i>\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          textDecoration: props.checked ? \"line-through\" : \"default\",\r\n          display: \"inline-block\",\r\n          marginLeft: \"21px\",\r\n          width: \"82%\",\r\n          marginBottom: \"5px\",\r\n        }}\r\n      >\r\n        {props.item.item}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editNote: (id, note) => dispatch(editNote(id, note)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ListItem);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./Note.module.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport PaletteIcon from \"@material-ui/icons/Palette\";\r\nimport ListItem from \"./ListItem\";\r\nimport ColorPopper from \"./ColorPopper\";\r\nimport { editNote, archiveNote, unarchiveNote } from \"../actions/actions\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport AddLabels from \"./AddLabels\";\r\n\r\nfunction color(color) {\r\n  switch (color) {\r\n    case \"white\":\r\n      return classes.white;\r\n\r\n    case \"orange\":\r\n      return classes.orange;\r\n\r\n    case \"yellow\":\r\n      return classes.yellow;\r\n\r\n    case \"green\":\r\n      return classes.green;\r\n\r\n    case \"turquoise\":\r\n      return classes.turquoise;\r\n\r\n    case \"blue\":\r\n      return classes.blue;\r\n\r\n    case \"darkblue\":\r\n      return classes.darkblue;\r\n\r\n    case \"purple\":\r\n      return classes.purple;\r\n\r\n    case \"pink\":\r\n      return classes.pink;\r\n\r\n    default:\r\n      return;\r\n  }\r\n}\r\nfunction Note(props) {\r\n  const [colorPopperLocation, setColorPopperLocation] = useState(null);\r\n\r\n  const open = Boolean(colorPopperLocation);\r\n  const id = open ? \"simple-popper\" : undefined;\r\n\r\n  const [labelPopperLocation, setLabelPopperLocation] = useState(null);\r\n\r\n  const labelOpen = Boolean(labelPopperLocation);\r\n  const labelId = labelOpen ? \"simple-popper\" : undefined;\r\n\r\n\r\n  function addNewChosenLabelHandler(label) {\r\n    if (label !== \"\" && !props.note.labels.includes(label)) {\r\n      props.editNote(props.note.id, {\r\n        ...props.note,\r\n        labels: [label, ...props.note.labels]\r\n      })\r\n    }\r\n  }\r\n\r\n  function toggleLabelClickHandler(label, checked) {\r\n    if (checked) {\r\n      props.editNote(props.note.id, {\r\n        ...props.note,\r\n        labels: props.note.labels.filter(labelItem => {\r\n          return label !== labelItem\r\n        })\r\n      })\r\n    } else {\r\n      props.editNote(props.note.id, {\r\n        ...props.note,\r\n        labels: [label, ...props.note.labels]\r\n      })\r\n    }\r\n  }\r\n  function closeLabelEditHandler() {\r\n    if (labelOpen) {\r\n      setLabelPopperLocation(null);\r\n    }\r\n  }\r\n  function openLabelEditHandler(event) {\r\n    event.stopPropagation();\r\n    setLabelPopperLocation((oldLabelPopperLocation) => {\r\n      return oldLabelPopperLocation ? null : event.currentTarget;\r\n      // event.currentTarget\r\n    });\r\n    setColorPopperLocation(null);\r\n  }\r\n\r\n  function openColorEditHandler(event) {\r\n    event.stopPropagation();\r\n    setColorPopperLocation((oldColorPopperLocation) => {\r\n      return oldColorPopperLocation ? null : event.currentTarget;\r\n    });\r\n    setLabelPopperLocation(null);\r\n  }\r\n\r\n  function closeColorEditHandler() {\r\n    if (open) {\r\n      setColorPopperLocation(null);\r\n    }\r\n  }\r\n\r\n  const colorClass = color(props.note.color);\r\n\r\n  function removeLabelFromNote(label) {\r\n    const newLabels = props.note.labels.filter(noteLabel => {\r\n      return noteLabel !== label;\r\n    })\r\n    props.editNote(props.note.id, {...props.note, labels: newLabels});\r\n  }\r\n\r\n  function changeColorHandler(color) {\r\n    if (color !== props.note.color) {\r\n      const newNote = { ...props.note, color: color };\r\n      props.editNote(props.note.id, newNote);\r\n    }\r\n    closeColorEditHandler();\r\n  }\r\n\r\n  function pinHandler(event) {\r\n    event.stopPropagation();\r\n    const newNote = { ...props.note, pinned: !props.note.pinned };\r\n    props.editNote(props.note.id, newNote);\r\n  }\r\n  let archiveButton = null;\r\n  if (props.editable && !props.archived) {\r\n    archiveButton = (\r\n      <Tooltip title=\"Archive\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => {\r\n            event.stopPropagation();\r\n            return props.archiveNote(props.note);\r\n          }}\r\n        >\r\n          <ArchiveIcon />\r\n        </button>\r\n      </Tooltip>\r\n    );\r\n  } else if (props.editable && props.archived) {\r\n    archiveButton = (\r\n      <Tooltip title=\"Unarchive\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => {\r\n            event.stopPropagation();\r\n            return props.unarchiveNote(props.note);\r\n          }}\r\n        >\r\n          <UnarchiveIcon />\r\n        </button>\r\n      </Tooltip>\r\n    )} \r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={\r\n          classes.Note +\r\n          \" \" +\r\n          colorClass +\r\n          \" \" +\r\n          (props.editing && props.editedId === props.note.id\r\n            ? classes.Hide\r\n            : \"\")\r\n        }\r\n        onClick={\r\n          props.showEditButton ? () => props.onClick(props.note.id) : null\r\n        }\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            display: \"inline-block\",\r\n            wordWrap: \"break-word\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"inline-block\",\r\n              wordWrap: \"break-word\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <p\r\n              className={classes.Title}\r\n              // style={{ maxWidth: \"80%\", marginRight: \"0\", display: \"inline-block\" }}\r\n              style={{ maxWidth: \"85%\" }}\r\n            >\r\n              {props.note.title}\r\n            </p>\r\n\r\n            {props.note.type === \"note\" ? (\r\n              <div style={{ width: \"85%\" }}>\r\n                <p>{props.note.content}</p>\r\n                {props.note.title === \"\" && props.note.content === \"\" ? (\r\n                  <p style={{ color: \"gray\" }}>Empty note</p>\r\n                ) : null}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <ul>\r\n                  {props.note.unchecked.map((item) => {\r\n                    return (\r\n                      <ListItem\r\n                        editable={props.editable}\r\n                        key={item.id}\r\n                        item={item}\r\n                        checked={false}\r\n                        list={props.note}\r\n                      />\r\n                    );\r\n                  })}\r\n                </ul>\r\n                {(props.note.checked.length > 0 &&\r\n                  props.note.unchecked.length) > 0 ? (\r\n                  <hr />\r\n                ) : null}\r\n                <ul>\r\n                  {props.note.checked.map((item) => {\r\n                    return (\r\n                      <ListItem\r\n                        editable={props.editable}\r\n                        key={item.id}\r\n                        item={item}\r\n                        checked={true}\r\n                        list={props.note}\r\n                      />\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div\r\n            className={\r\n              classes.PinButton + (props.editable ? \"\" : \" \" + classes.Hide)\r\n            }\r\n          >\r\n            <Button\r\n              tooltipTitle=\"Pin note\"\r\n              onClick={pinHandler}\r\n              disabled={props.editable ? false : true}\r\n            >\r\n              <i\r\n                className={\r\n                  \"fas fa-thumbtack\" +\r\n                  (props.note.pinned\r\n                    ? \" \" + classes.PinActive\r\n                    : \" \" + classes.PinInactive)\r\n                }\r\n              ></i>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.Labels}>\r\n          {props.note.labels.slice(0, 3).map((label) => {\r\n            return (\r\n              <div key={label} className={classes.Label}>\r\n                <Link to={\"/label/\" + label}>\r\n                  <span className={classes.LabelText}>{label}</span>\r\n                </Link>\r\n\r\n                <div className={classes.Button}>\r\n                  <Button\r\n                    tooltipTitle=\"Delete label\"\r\n                    onClick={(event) => {\r\n                      event.stopPropagation();\r\n                      return removeLabelFromNote(label);\r\n                    }}\r\n                  >\r\n                    <span\r\n                      className=\"material-icons-outlined\"\r\n                      style={{\r\n                        verticalAlign: \"middle\",\r\n                        display: \"inline-block\",\r\n                        fontSize: \"15px\",\r\n                      }}\r\n                    >\r\n                      close\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          {props.note.labels.length > 3 ? (\r\n            <div className={classes.RemainingLabels}>\r\n              <span style={{ fontSize: \"15px\" }}>\r\n                {\"+\" + (props.note.labels.length - 3)}\r\n              </span>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className={classes.ButtonArea}>\r\n          <div style={{ width: props.editable ? \"50px\" : \"145px\" }}></div>\r\n          {props.editable ? (\r\n            <Tooltip title=\"Change color\">\r\n              <button type=\"button\" onClick={openColorEditHandler}>\r\n                <PaletteIcon />\r\n              </button>\r\n            </Tooltip>\r\n          ) : null}\r\n          {props.editable ? (\r\n            <Tooltip title=\"Edit Labels\">\r\n              <button type=\"button\" onClick={openLabelEditHandler}>\r\n                <LabelIcon />\r\n              </button>\r\n            </Tooltip>\r\n          ) : null}\r\n          {archiveButton}\r\n          <Button\r\n            tooltipTitle={props.deleteTooltip}\r\n            onClick={(event) => {\r\n              event.stopPropagation();\r\n              return props.deleteNote(props.note.id);\r\n            }}\r\n          >\r\n            {props.showEditButton ? <DeleteIcon /> : <DeleteForeverIcon />}\r\n          </Button>\r\n\r\n          {props.showEditButton ? (\r\n            <Button\r\n              tooltipTitle=\"Edit\"\r\n              onClick={() => props.onClick(props.index)}\r\n            >\r\n              <EditIcon />\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              tooltipTitle=\"Restore\"\r\n              onClick={() => props.restoreNote(props.note.id)}\r\n            >\r\n              <RestoreFromTrashIcon />\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <ClickAwayListener onClickAway={closeColorEditHandler} touchEvent={false}>\r\n        <Popper\r\n          id={id}\r\n          open={open}\r\n          anchorEl={colorPopperLocation}\r\n          // disablePortal\r\n        >\r\n          <ColorPopper changeColorHandler={changeColorHandler} />\r\n        </Popper>\r\n      </ClickAwayListener>\r\n      <ClickAwayListener onClickAway={closeLabelEditHandler} touchEvent={false}>\r\n        <Popper\r\n          style={{ zIndex: \"500\" }}\r\n          id={labelId}\r\n          open={labelOpen}\r\n          anchorEl={labelPopperLocation}\r\n          // modifiers={{\r\n          //   preventOverflow: {\r\n          //     escapeWithReference: false,\r\n          //   },\r\n          // }}\r\n          // disablePortal\r\n        >\r\n          <AddLabels\r\n            chosenLabels={props.note.labels}\r\n            addNewChosenLabelHandler={addNewChosenLabelHandler}\r\n            clickHandler={toggleLabelClickHandler}\r\n            filterLabel={props.filterLabel}\r\n          />\r\n        </Popper>\r\n      </ClickAwayListener>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editNote: (id, note) => dispatch(editNote(id, note)),\r\n    archiveNote: (note) => dispatch(archiveNote(note)),\r\n    unarchiveNote: (note) => dispatch(unarchiveNote(note)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Note);\r\n","function getVisibleNotes (notes, labelName, searchText, color) {\r\n    if (notes.length === 0) {\r\n        return [];\r\n    }\r\n    return (\r\n        notes.filter(note => {\r\n            const labelMatch = labelName === \"\" || note.labels.includes(labelName);\r\n            let labelsIncludeText = false;\r\n            for (let label of note.labels){\r\n                if (label.toLowerCase().includes(searchText.toLowerCase())) {\r\n                    labelsIncludeText = true;\r\n                    break;\r\n                }\r\n            }\r\n            let contentIncludesText = false;\r\n            if (note.type === \"note\") {\r\n                contentIncludesText = note.content.toLowerCase().includes(searchText.toLowerCase());\r\n            } else {\r\n                for (let item of note.checked){\r\n                    if (item.item.toLowerCase().includes(searchText.toLowerCase())) {\r\n                        contentIncludesText = true;\r\n                        break;\r\n                    }\r\n                }\r\n                for (let item of note.unchecked){\r\n                    if (item.item.toLowerCase().includes(searchText.toLowerCase())) {\r\n                        contentIncludesText = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const searchTextMatch = note.title.toLowerCase().includes(searchText.toLowerCase()) || contentIncludesText || labelsIncludeText;\r\n            const colorMatch = color === \"\" || note.color === color;\r\n            return labelMatch && searchTextMatch && colorMatch;\r\n        })\r\n    );\r\n}\r\n\r\nexport default getVisibleNotes;","export const setFilterText = (filterText) => ({type: \"SET_FILTER_TEXT\", filterText: filterText});\r\n\r\nexport const setFilterColor = (filterColor) => ({type: \"SET_FILTER_COLOR\", filterColor: filterColor});\r\n\r\n","import React, { useState, useRef } from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CloudDoneOutlinedIcon from \"@material-ui/icons/CloudDoneOutlined\";\r\nimport Button from \"./Button\";\r\nimport { setFilterText, setFilterColor } from \"../actions/filters\";\r\nimport { openSidebar, closeSidebar } from \"../actions/ui\";\r\nimport { connect } from \"react-redux\";\r\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport ColorPopper from \"./ColorPopper\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { startLogout } from \"../actions/auth\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { syncingStart, syncSuccess, syncFail } from \"../actions/ui\";\r\nimport { firebase } from \"../firebase/firebase\";\r\n\r\nfunction color(color) {\r\n  switch (color) {\r\n    case \"white\":\r\n      return classes.white;\r\n\r\n    case \"orange\":\r\n      return classes.orange;\r\n\r\n    case \"yellow\":\r\n      return classes.yellow;\r\n\r\n    case \"green\":\r\n      return classes.green;\r\n\r\n    case \"turquoise\":\r\n      return classes.turquoise;\r\n\r\n    case \"blue\":\r\n      return classes.blue;\r\n\r\n    case \"darkblue\":\r\n      return classes.darkblue;\r\n\r\n    case \"purple\":\r\n      return classes.purple;\r\n\r\n    case \"pink\":\r\n      return classes.pink;\r\n\r\n    default:\r\n      return;\r\n  }\r\n}\r\nfunction Header(props) {\r\n  const [colorPopperLocation, setColorPopperLocation] = useState(null);\r\n\r\n  const open = Boolean(colorPopperLocation);\r\n  const id = open ? \"simple-popper\" : undefined;\r\n  const menu = useRef(null);\r\n  function openColorEditHandler(event) {\r\n    // event.stopPropagation();\r\n    event.stopPropagation();\r\n    setColorPopperLocation((oldColorPopperLocation) => {\r\n      return oldColorPopperLocation ? null : event.currentTarget;\r\n    });\r\n  }\r\n  function closeColorEditHandler(event) {\r\n    if (open) {\r\n      console.log(event);\r\n      setColorPopperLocation(null);\r\n    }\r\n  }\r\n  function setfilterText(event) {\r\n    props.setFilterText(event.target.value);\r\n  }\r\n\r\n  function setFilterColor(color) {\r\n    props.setFilterColor(color);\r\n    closeColorEditHandler();\r\n  }\r\n  function clearSearch() {\r\n    props.setFilterText(\"\");\r\n    props.setFilterColor(\"\");\r\n  }\r\n\r\n  function toggleSidebar(event) {\r\n    if (props.sidebarOpen) {\r\n      props.closeSidebar();\r\n    } else {\r\n      event.stopPropagation();\r\n      props.openSidebar();\r\n    }\r\n  }\r\n\r\n  function refreshSyncHandler() {\r\n    const route = \"/users/\" + props.uid;\r\n    props.syncingStart();\r\n    firebase\r\n      .database()\r\n      .ref(route)\r\n      .set(props.main)\r\n      .then(() => {\r\n        console.log(\"success\");\r\n        props.syncSuccess();\r\n      })\r\n      .catch(() => {\r\n        props.syncFail();\r\n      });\r\n  }\r\n\r\n  let syncButton = (\r\n    <Tooltip title=\"synced\">\r\n      <button className={classes.Cloud}>\r\n        <CloudDoneOutlinedIcon />\r\n      </button>\r\n    </Tooltip>\r\n  );\r\n\r\n  if (props.syncStatus === \"syncing\") {\r\n    syncButton = (\r\n      <Tooltip title=\"synced\">\r\n        <button className={classes.Cloud}>\r\n          <div class={classes.Loader}></div>\r\n        </button>\r\n      </Tooltip>\r\n    );\r\n  } else if (props.syncStatus === \"failed\") {\r\n    syncButton = (\r\n      <Tooltip title=\"Failed to sync. Click here to try again.\">\r\n        <button\r\n          className={classes.Cloud + \" \" + classes.Red}\r\n          onClick={refreshSyncHandler}\r\n        >\r\n          <RefreshIcon />\r\n        </button>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <span\r\n        className={classes.HamburgerMenu}\r\n        onClick={toggleSidebar}\r\n        ref={menu}\r\n      >\r\n        <MenuIcon fontSize=\"inherit\" />\r\n      </span>\r\n      <span className={classes.Keeper}>\r\n        <Link to=\"/notes\" exact=\"true\" onClick={clearSearch}>\r\n          <h1>\r\n            <i className=\"far fa-lightbulb\"></i> <span>Keeper</span>\r\n          </h1>\r\n        </Link>\r\n      </span>\r\n      <div className={classes.Search}>\r\n        <div className={classes.SearchButton}>\r\n          <Button tooltipTitle=\"Search\">\r\n            <SearchIcon />\r\n          </Button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\r\n            \"Search\" + (props.color === \"\" ? \"\" : \" within \" + props.color)\r\n          }\r\n          value={props.text}\r\n          onChange={setfilterText}\r\n        ></input>\r\n        <div className={classes.RightButtons}>\r\n          <div\r\n            className={\r\n              classes.PaletteButton +\r\n              \" \" +\r\n              (props.color === \"\" ? \"\" : color(props.color))\r\n            }\r\n          >\r\n            <Button\r\n              tooltipTitle=\"Filter by color\"\r\n              onClick={openColorEditHandler}\r\n            >\r\n              <PaletteOutlinedIcon />\r\n            </Button>\r\n          </div>\r\n          <ClickAwayListener\r\n            onClickAway={closeColorEditHandler}\r\n            touchEvent={false}\r\n          >\r\n            <Popper\r\n              id={id}\r\n              open={open}\r\n              anchorEl={colorPopperLocation}\r\n              disablePortal\r\n            >\r\n              <ColorPopper changeColorHandler={setFilterColor} />\r\n            </Popper>\r\n          </ClickAwayListener>\r\n          <div className={classes.ClearButton}>\r\n            <Button\r\n              tooltipTitle=\"Clear Search and Color Filter\"\r\n              onClick={clearSearch}\r\n            >\r\n              <ClearIcon />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.LogoutButton}>\r\n        {syncButton}\r\n        <button onClick={props.startLogout} className={classes.Logout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    text: state.filters.filterText,\r\n    color: state.filters.filterColor,\r\n    sidebarOpen: state.ui.sidebarOpenMobile,\r\n    syncStatus: state.ui.syncStatus,\r\n    uid: state.auth.uid,\r\n    main: state.main,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFilterText: (filterText) => dispatch(setFilterText(filterText)),\r\n    setFilterColor: (filterColor) => dispatch(setFilterColor(filterColor)),\r\n    openSidebar: () => dispatch(openSidebar()),\r\n    closeSidebar: () => dispatch(closeSidebar()),\r\n    startLogout: () => dispatch(startLogout()),\r\n    syncingStart: () => dispatch(syncingStart()),\r\n    syncSuccess: () => dispatch(syncSuccess()),\r\n    syncFail: () => dispatch(syncFail()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import { firebase, googleAuthProvider } from \"../firebase/firebase\";\r\n\r\nexport const login = (uid) => {\r\n  return {\r\n    type: \"LOGIN\",\r\n    uid: uid,\r\n  };\r\n};\r\n\r\nexport const startLogin = () => {\r\n  return (dispatch) => {\r\n    return firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .catch(() => {\r\n        //Ignore\r\n      });\r\n  };\r\n};\r\n\r\nexport const setLoggingIn = (truth) => {\r\n  return {\r\n    type: \"SET_LOGGING_IN\",\r\n    truth: truth,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: \"LOGOUT\",\r\n  };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    return firebase.auth().signOut();\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { setFilterText, setFilterColor } from \"../actions/filters\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction NavigationItem(props) {\r\n  function onClickHandler () {\r\n    props.setFilterText(\"\");\r\n    props.setFilterColor(\"\");\r\n  }\r\n  return (\r\n    <li className={classes.NavigationItem}>\r\n      <NavLink activeClassName={classes.active} to={props.path} exact onClick={onClickHandler}>\r\n        <span\r\n          className=\"material-icons-outlined\"\r\n          style={{\r\n            verticalAlign: \"middle\",\r\n            display: \"inline-block\",\r\n            width: \"30px\",\r\n          }}\r\n        >\r\n          {props.iconName}\r\n        </span>{\" \"}\r\n        <span\r\n          style={{\r\n            verticalAlign: \"middle\",\r\n            display: \"inline-block\",\r\n            paddingBottom: \"3px\",\r\n            whiteSpace: \"nowrap\",\r\n            textOverflow: \"ellipsis\",\r\n            overflow: \"hidden\",\r\n            width: \"80%\"\r\n          }}\r\n        >\r\n          {props.title}\r\n        </span>\r\n      </NavLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFilterText : (filterText) => dispatch(setFilterText(filterText)),\r\n    setFilterColor: (filterColor) => dispatch(setFilterColor(filterColor)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NavigationItem);\r\n","import React from \"react\";\r\nimport classes from \"./EditLabelsNavItem.module.css\";\r\n\r\nfunction EditLabelsNavItem(props) {\r\n  return (\r\n    <li className={classes.NavigationItem} onClick={props.openEditLabels}>\r\n      <div>\r\n        <span\r\n          className=\"material-icons-outlined\"\r\n          style={{\r\n            verticalAlign: \"middle\",\r\n            display: \"inline-block\",\r\n            width: \"30px\",\r\n          }}\r\n        >\r\n          edit\r\n        </span>{\" \"}\r\n        <span style={{ verticalAlign: \"middle\", display: \"inline-block\", paddingBottom: \"2px\" }}>Edit Labels</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default EditLabelsNavItem;","import React from \"react\";\r\nimport classes from \"./SideBar.module.css\";\r\nimport NavigationItem from \"./NavigationItem\";\r\nimport EditLabelsNavItem from \"./EditLabelsNavItem\";\r\nimport { connect } from \"react-redux\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport { closeSidebar } from \"../actions/ui\";\r\n\r\nfunction SideBar(props) {\r\n  function clickAwayHandler() {\r\n    if (props.sidebarOpen) {\r\n      props.closeSidebar();\r\n    }\r\n  }\r\n  return (\r\n    <ClickAwayListener onClickAway={clickAwayHandler} touchEvent={false}>\r\n      <div\r\n        className={\r\n          classes.SideBar +\r\n          \" \" +\r\n          (props.sidebarOpen ? classes.Open : classes.Close)\r\n        }\r\n      >\r\n        <nav>\r\n          <ul className={classes.NavigationItems}>\r\n            <NavigationItem path=\"/notes\" iconName=\"note\" title=\"Notes\" />\r\n\r\n            {props.labels.map((label) => {\r\n              return (\r\n                <NavigationItem\r\n                  key={label}\r\n                  path={\"/label/\" + label}\r\n                  iconName=\"label\"\r\n                  title={label}\r\n                />\r\n              );\r\n            })}\r\n            <EditLabelsNavItem openEditLabels={props.openEditLabels} />\r\n            <NavigationItem\r\n              path=\"/archive\"\r\n              iconName=\"archive\"\r\n              title=\"Archive\"\r\n            />\r\n            <NavigationItem path=\"/trash\" iconName=\"delete\" title=\"Trash\" />\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    labels: state.main.labels,\r\n    sidebarOpen: state.ui.sidebarOpenMobile,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    closeSidebar: () => dispatch(closeSidebar()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n","import React from \"react\";\r\n\r\n\r\nfunction Backdrop (props) {\r\n    let style = {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"fixed\",\r\n        zIndex: \"100\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n    };\r\n    if (props.transparent) {\r\n        style.backgroundColor = \"rgba(0, 0, 0, 0)\"\r\n    }\r\n    return props.show ? <div style={style} onClick={props.onClick}></div> :  null;\r\n}\r\n\r\nexport default Backdrop;","import React, { useState, useRef } from \"react\";\r\nimport CreateArea from \"./CreateArea\";\r\nimport EditArea from \"./EditArea\";\r\nimport { connect } from \"react-redux\";\r\nimport Note from \"./Note\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport {\r\n  addNote,\r\n  deleteNote,\r\n  editNote,\r\n  archiveNote,\r\n  editAndArchive,\r\n  editAndUnarchive,\r\n} from \"../actions/actions\";\r\nimport classes from \"./NotesPage.module.css\";\r\nimport getVisibleNotes from \"../selectors/notes\";\r\nimport Header from \"./Header\";\r\nimport SideBar from \"./SideBar\";\r\nimport Backdrop from \"./Backdrop\";\r\n\r\nfunction NotesPage(props) {\r\n  const [editedId, setEditedId] = useState(null);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedNote, setEditedNote] = useState(null);\r\n\r\n  // const editedNoteIndexInArchive = props.archive.findIndex(note => {\r\n  //   return note.id === editedNote.id\r\n  // })\r\n  // const editedNoteInArchive = (editedNoteIndexInArchive > -1);\r\n\r\n  const editArea = useRef(null);\r\n  // let editedIndex = props.notes.findIndex((note) => {\r\n  //   return note.id === editedId;\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   console.log(editArea.current);\r\n  // }, [editing]);\r\n\r\n  function editHandler(id) {\r\n    setEditedId(id);\r\n    setEditing(true);\r\n    let editedIndex = props.notes.findIndex((note) => {\r\n      return note.id === id;\r\n    });\r\n    if (editedIndex > -1) {\r\n      setEditedNote(props.notes[editedIndex]);\r\n    } else {\r\n      editedIndex = props.archive.findIndex((note) => {\r\n        return note.id === id;\r\n      });\r\n      setEditedNote(props.archive[editedIndex]);\r\n    }\r\n  }\r\n\r\n  function closeEditHandler() {\r\n    setEditing(false);\r\n    setEditedId(null);\r\n    setEditedNote(null);\r\n  }\r\n  // useEffect(() => {\r\n  //   console.log(props);\r\n  // });\r\n\r\n  const path = props.match.path;\r\n  const filterLabel = path === \"/\" ? \"\" : path.slice(7, path.length);\r\n  const filterText = props.text;\r\n  const filterColor = props.color;\r\n  const displayedNotes = getVisibleNotes(\r\n    props.notes,\r\n    filterLabel,\r\n    filterText,\r\n    filterColor\r\n  );\r\n  const pinnedNotes = displayedNotes.filter((note) => {\r\n    return note.pinned;\r\n  });\r\n  const unpinnedNotes = displayedNotes.filter((note) => {\r\n    return !note.pinned;\r\n  });\r\n  let archivedNotes = [];\r\n  if (filterLabel !== \"\") {\r\n    archivedNotes = getVisibleNotes(\r\n      props.archive,\r\n      filterLabel,\r\n      filterText,\r\n      filterColor\r\n    );\r\n  }\r\n\r\n  const noNotes =\r\n    path === \"/notes\" ? (\r\n      <div className={classes.Empty}>\r\n        <span\r\n          className={\"material-icons-outlined \" + classes.Icon}\r\n          style={{ verticalAlign: \"middle\" }}\r\n        >\r\n          note\r\n        </span>\r\n        <p className={classes.Note}>Notes you add appear here</p>\r\n      </div>\r\n    ) : (\r\n      <div className={classes.Empty}>\r\n        <span\r\n          className={\"material-icons \" + classes.Icon}\r\n          style={{ verticalAlign: \"middle\" }}\r\n        >\r\n          label_outline\r\n        </span>\r\n        <p className={classes.Note}>No notes with this label yet</p>\r\n      </div>\r\n    );\r\n\r\n  function backdropClickHandler() {\r\n    editArea.current();\r\n    closeEditHandler();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.NotesPage}>\r\n        <Header />\r\n        <SideBar openEditLabels={props.openEditLabels} />\r\n        <CreateArea filterLabel={filterLabel} />\r\n\r\n        {editing ? (\r\n          <EditArea\r\n            editAndUnarchive={props.editAndUnarchive}\r\n            editAndArchive={props.editAndArchive}\r\n            archive={props.archive}\r\n            ref={editArea}\r\n            note={editedNote}\r\n            editNote={props.editNote}\r\n            // editedId={editedId}\r\n            closeEdit={closeEditHandler}\r\n          ></EditArea>\r\n        ) : null}\r\n        <Backdrop\r\n          show={editing}\r\n          onClick={backdropClickHandler}\r\n          transparent={false}\r\n        />\r\n        {displayedNotes.length === 0 &&\r\n        archivedNotes.length === 0 &&\r\n        props.text === \"\" &&\r\n        props.color === \"\"\r\n          ? noNotes\r\n          : null}\r\n\r\n        {pinnedNotes.length > 0 ? (\r\n          <div className={classes.Notes}>\r\n            {props.text === \"\" && props.color === \"\" ? null : (\r\n              <h3 className={classes.SearchResult}>Search Results:</h3>\r\n            )}\r\n            <h5>PINNED</h5>\r\n            <Masonry>\r\n              {pinnedNotes.map((note) => {\r\n                return (\r\n                  <Note\r\n                    archived={false}\r\n                    editable={true}\r\n                    type={note.type}\r\n                    editedId={editedId}\r\n                    editing={editing}\r\n                    key={note.id}\r\n                    note={note}\r\n                    // index={index}\r\n                    deleteNote={props.deleteNote}\r\n                    deleteTooltip=\"Delete Note\"\r\n                    showEditButton={true}\r\n                    onClick={editHandler}\r\n                  />\r\n                );\r\n              })}\r\n            </Masonry>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div\r\n          className={\r\n            classes.Notes +\r\n            (pinnedNotes.length > 0 ? \" \" + classes.NotesWhenPinned : \"\")\r\n          }\r\n        >\r\n          {(props.text !== \"\" || props.color !== \"\") &&\r\n          pinnedNotes.length === 0 ? (\r\n            <h3 className={classes.SearchResult}>Search Results:</h3>\r\n          ) : null}\r\n          {pinnedNotes.length > 0 && unpinnedNotes.length > 0 ? (\r\n            <h5>OTHERS</h5>\r\n          ) : null}\r\n          <Masonry>\r\n            {unpinnedNotes.map((note) => {\r\n              return (\r\n                <Note\r\n                  archived={false}\r\n                  editable={true}\r\n                  type={note.type}\r\n                  editedId={editedId}\r\n                  editing={editing}\r\n                  key={note.id}\r\n                  note={note}\r\n                  // index={index}\r\n                  deleteNote={props.deleteNote}\r\n                  deleteTooltip=\"Delete Note\"\r\n                  showEditButton={true}\r\n                  onClick={editHandler}\r\n                />\r\n              );\r\n            })}\r\n          </Masonry>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            classes.Notes +\r\n            (archivedNotes.length > 0 ? \" \" + classes.NotesWhenPinned : \"\")\r\n          }\r\n        >\r\n          {archivedNotes.length > 0 ? <h5>ARCHIVE</h5> : null}\r\n          <Masonry>\r\n            {archivedNotes.map((note) => {\r\n              return (\r\n                <Note\r\n                  archived={true}\r\n                  editable={true}\r\n                  type={note.type}\r\n                  editedId={editedId}\r\n                  editing={editing}\r\n                  key={note.id}\r\n                  note={note}\r\n                  // index={index}\r\n                  deleteNote={props.deleteNote}\r\n                  deleteTooltip=\"Delete Note\"\r\n                  showEditButton={true}\r\n                  onClick={editHandler}\r\n                />\r\n              );\r\n            })}\r\n          </Masonry>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notes: state.main.notes,\r\n    archive: state.main.archive,\r\n    text: state.filters.filterText,\r\n    color: state.filters.filterColor,\r\n    labels: state.main.labels,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNote: (note) => dispatch(addNote(note)),\r\n    deleteNote: (id) => dispatch(deleteNote(id)),\r\n    editNote: (id, note) => dispatch(editNote(id, note)),\r\n    archiveNote: (note) => dispatch(archiveNote(note)),\r\n    editAndArchive: (oldNote, newNote) =>\r\n      dispatch(editAndArchive(oldNote, newNote)),\r\n    editAndUnarchive: (oldNote, newNote) =>\r\n      dispatch(editAndUnarchive(oldNote, newNote)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesPage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Note from \"./Note\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport {\r\n  deleteNotePermanently,\r\n  restoreNote,\r\n  emptyTrash,\r\n} from \"../actions/actions\";\r\nimport classes from \"./TrashPage.module.css\";\r\nimport Header from \"./Header\";\r\nimport SideBar from \"./SideBar\";\r\nimport getVisibleNotes from \"../selectors/notes\";\r\n\r\nfunction TrashPage(props) {\r\n  // useEffect(() => {\r\n  //   console.log(props);\r\n  // });\r\n  const displayedTrashNotes = getVisibleNotes(\r\n    props.trash,\r\n    \"\",\r\n    props.text,\r\n    props.color\r\n  );\r\n  const noTrash =\r\n    props.text === \"\" && props.color === \"\" ? (\r\n      <div className={classes.Empty}>\r\n        <span\r\n          className={\"material-icons \" + classes.Icon}\r\n          style={{ verticalAlign: \"middle\" }}\r\n        >\r\n          delete_outline\r\n        </span>\r\n        <p className={classes.Note}>No notes in Trash</p>\r\n      </div>\r\n    ) : (\r\n      <h3 className={classes.SearchResult}>Search Results:</h3>\r\n    );\r\n  const yesTrash =\r\n    props.text === \"\" && props.color === \"\" ? (\r\n      <button\r\n        style={{ marginTop: \"110px\" }}\r\n        className={classes.Button}\r\n        type=\"button\"\r\n        onClick={props.emptyTrash}\r\n      >\r\n        Click here to empty trash\r\n      </button>\r\n    ) : (\r\n      <h3 className={classes.SearchResult}>Search Results:</h3>\r\n    );\r\n  const isThereTrash = props.trash.length === 0 ? noTrash : yesTrash;\r\n\r\n  return (\r\n    <div className={classes.NotePage}>\r\n      <Header />\r\n      <SideBar openEditLabels={props.openEditLabels} />\r\n      <div className={classes.Notes}>\r\n        {isThereTrash}\r\n        <Masonry>\r\n          {displayedTrashNotes.map((note, index) => {\r\n            return (\r\n              <Note\r\n                archived={false}\r\n                editable={false}\r\n                type={note.type}\r\n                key={note.id}\r\n                note={note}\r\n                index={index}\r\n                deleteNote={props.deleteNotePermanently}\r\n                deleteTooltip=\"Delete Permanently\"\r\n                showEditButton={false}\r\n                restoreNote={props.restoreNote}\r\n              />\r\n            );\r\n          })}\r\n        </Masonry>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    trash: state.main.trash,\r\n    notes: state.main.notes,\r\n    text: state.filters.filterText,\r\n    color: state.filters.filterColor,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteNotePermanently: (index) => dispatch(deleteNotePermanently(index)),\r\n    restoreNote: (index) => dispatch(restoreNote(index)),\r\n    emptyTrash: () => dispatch(emptyTrash()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrashPage);\r\n","import React, { useState, useRef } from \"react\";\r\nimport classes from \"./ArchivePage.module.css\";\r\nimport EditArea from \"./EditArea\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport Note from \"./Note\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport Header from \"./Header\";\r\nimport SideBar from \"./SideBar\";\r\nimport getVisibleNotes from \"../selectors/notes\";\r\nimport {\r\n  deleteNote,\r\n  editNote,\r\n  editAndArchive,\r\n  editAndUnarchive,\r\n} from \"../actions/actions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ArchivePage(props) {\r\n  const [editedId, setEditedId] = useState(null);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const editArea = useRef(null);\r\n  const editedIndex = props.archive.findIndex((note) => {\r\n    return note.id === editedId;\r\n  });\r\n\r\n  const displayedArchiveNotes = getVisibleNotes(\r\n    props.archive,\r\n    \"\",\r\n    props.text,\r\n    props.color\r\n  );\r\n\r\n  function editHandler(id) {\r\n    setEditedId(id);\r\n    setEditing(true);\r\n  }\r\n\r\n  function closeEditHandler() {\r\n    setEditing(false);\r\n    setEditedId(null);\r\n  }\r\n\r\n  function backdropClickHandler() {\r\n    editArea.current();\r\n    closeEditHandler();\r\n  }\r\n\r\n  const noNotes = (\r\n    <div className={classes.Empty}>\r\n      <span\r\n        className={\"material-icons-outlined \" + classes.Icon}\r\n        style={{ verticalAlign: \"middle\" }}\r\n      >\r\n        archive\r\n      </span>\r\n      <p className={classes.Note}>Your archived notes appear here</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.NotesPage}>\r\n      <Header />\r\n      <SideBar openEditLabels={props.openEditLabels} />\r\n      {editing ? (\r\n        <EditArea\r\n          editAndArchive={props.editAndArchive}\r\n          editAndUnarchive={props.editAndUnarchive}\r\n          archive={props.archive}\r\n          ref={editArea}\r\n          note={props.archive[editedIndex]}\r\n          editNote={props.editNote}\r\n          // editedId={editedId}\r\n          closeEdit={closeEditHandler}\r\n        ></EditArea>\r\n      ) : null}\r\n      <Backdrop\r\n        show={editing}\r\n        onClick={backdropClickHandler}\r\n        transparent={false}\r\n      />\r\n      {props.archive.length === 0 && props.text === \"\" && props.color === \"\"\r\n        ? noNotes\r\n        : null}\r\n\r\n      <div className={classes.Notes}>\r\n        {props.text === \"\" && props.color === \"\" ? null : (\r\n          <h3 className={classes.SearchResult}>Search Results:</h3>\r\n        )}\r\n        <Masonry>\r\n          {displayedArchiveNotes.map((note) => {\r\n            return (\r\n              <Note\r\n                archived={true}\r\n                editable={true}\r\n                type={note.type}\r\n                editedId={editedId}\r\n                editing={editing}\r\n                key={note.id}\r\n                note={note}\r\n                // index={index}\r\n                deleteNote={props.deleteNote}\r\n                deleteTooltip=\"Delete Note\"\r\n                showEditButton={true}\r\n                onClick={editHandler}\r\n              />\r\n            );\r\n          })}\r\n        </Masonry>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    archive: state.main.archive,\r\n    text: state.filters.filterText,\r\n    color: state.filters.filterColor,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editNote: (id, note) => dispatch(editNote(id, note)),\r\n    deleteNote: (id) => dispatch(deleteNote(id)),\r\n    editAndArchive: (oldNote, newNote) =>\r\n      dispatch(editAndArchive(oldNote, newNote)),\r\n    editAndUnarchive: (oldNote, newNote) =>\r\n      dispatch(editAndUnarchive(oldNote, newNote)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArchivePage);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFoundPage() {\r\n  return (\r\n    <div style={{ marginLeft: \"285px\" }}>\r\n      <h1>404 Not Found</h1>\r\n      <Link to=\"/notes\">Go home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport classes from \"./LoginPage.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { startLogin } from \"../actions/auth\";\r\n\r\nconst LoginPage = (props) => {\r\n  return (\r\n    <div className={classes.Screen}>\r\n      <div className={classes.Form}>\r\n        <h1>\r\n          <i className=\"far fa-lightbulb\"></i> <span>Keeper</span>\r\n        </h1>\r\n\r\n        <div>\r\n          <p>Keep your notes organized.</p>\r\n        </div>\r\n        <div className={classes.ButtonArea}>\r\n          <button onClick={props.startLogin}>Login with Google</button>\r\n          {/* <button>Guest Mode</button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  startLogin: () => dispatch(startLogin()),\r\n});\r\nexport default connect(undefined, mapDispatchToProps)(LoginPage);\r\n","import React, { useState, useRef } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { connect } from \"react-redux\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { editLabel, deleteLabelCompletely } from \"../actions/actions\";\r\nimport classes from \"./EditLabel.module.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction EditLabel(props) {\r\n  const [labelName, setLabelName] = useState(props.label);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  function changeLabelName(event) {\r\n    setLabelName(event.target.value);\r\n  }\r\n  function handleDialogkOpen() {\r\n    setDialogOpen(true);\r\n  }\r\n\r\n  function handleDialogClose() {\r\n    setDialogOpen(false);\r\n  }\r\n\r\n  function editHandler() {\r\n    if (!props.labels.includes(labelName)) {\r\n      props.editLabel(props.label, labelName);\r\n      if (\"/label/\" + props.label === location.pathname) {\r\n        history.push(\"/label/\" + labelName);\r\n      }\r\n    } else {\r\n      setLabelName(props.label);\r\n      inputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  function deleteHandler() {\r\n    if (\"/label/\" + props.label === location.pathname) {\r\n      history.push(\"/notes\");\r\n    }\r\n    props.deleteLabelCompletely(props.label);\r\n  }\r\n\r\n  function handleEnter(event) {\r\n    if (event.key === \"Enter\") {\r\n      if (!props.labels.includes(labelName)) {\r\n        props.editLabel(props.label, labelName);\r\n        if (\"/label/\" + props.label === location.pathname) {\r\n          history.push(\"/label/\" + labelName);\r\n        }\r\n        inputRef.current.blur();\r\n      } else {\r\n        setLabelName(props.label);\r\n      }\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const index = props.labels.indexOf(props.label);\r\n  //   setLabelName(props.labels[index]);\r\n  // }, [props.labels, props.label]);\r\n\r\n  return (\r\n    <div className={classes.InputArea}>\r\n      <Button tooltipTitle=\"Delete this label\" onClick={handleDialogkOpen}>\r\n        <DeleteForeverIcon />\r\n      </Button>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        className={classes.Input}\r\n        onKeyPress={handleEnter}\r\n        style={{ display: \"inline-block\", paddingLeft: \"0\" }}\r\n        value={labelName}\r\n        onChange={changeLabelName}\r\n        name=\"label name\"\r\n        placeholder=\"Edit label name...\"\r\n      />\r\n      <Button tooltipTitle=\"Edit\" onClick={editHandler}>\r\n        <EditIcon />\r\n      </Button>\r\n      <Dialog\r\n        open={dialogOpen}\r\n        onClose={handleDialogClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            We’ll delete this label and remove it from all of your notes. Your\r\n            notes won’t be deleted\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <div className={classes.Button}>\r\n            <Button onClick={handleDialogClose} tooltipTitle=\"Cancel\">\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <div className={classes.Button}>\r\n            <Button onClick={deleteHandler} tooltipTitle=\"Delete\">\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    labels: state.main.labels,\r\n    filterLabel: state.filters.filterLabel,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    editLabel: (oldLabel, newLabel) => dispatch(editLabel(oldLabel, newLabel)),\r\n    deleteLabelCompletely: (label) => dispatch(deleteLabelCompletely(label)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditLabel);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport classes from \"./EditLabels.module.css\";\r\nimport { addNewLabel } from \"../actions/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"./Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditLabel from \"./EditLabel\";\r\n\r\n\r\nfunction EditLabels(props) {\r\n  const [newLabel, setNewLabel] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, []);\r\n\r\n  function changeNewLabel(event) {\r\n    setNewLabel(event.target.value);\r\n  }\r\n\r\n  function handleEnter(event) {\r\n    if (event.key === \"Enter\") {\r\n      props.addNewLabel(newLabel);\r\n      setNewLabel(\"\");\r\n    }\r\n  }\r\n\r\n  function addHandler() {\r\n    props.addNewLabel(newLabel);\r\n    setNewLabel(\"\");\r\n    inputRef.current.focus()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.Form}>\r\n      <div className={classes.InputArea}><p stye={{marginLeft: \"20px\", padding: \"10px\"}}>Edit Labels</p></div>\r\n      <div className={classes.InputArea}>\r\n        <input\r\n          ref={inputRef}\r\n          onKeyPress={handleEnter}\r\n          className={classes.Input}\r\n          autoComplete=\"off\"\r\n          name=\"label\"\r\n          placeholder=\"Add label...\"\r\n          value={newLabel}\r\n          onChange={changeNewLabel}\r\n          maxLength=\"40\"\r\n        />{\" \"}\r\n        <Button tooltipTitle=\"Create new label\" onClick={addHandler}>\r\n          <AddIcon />\r\n        </Button>\r\n      </div>\r\n      <ul>\r\n        {props.labels.map((label) => {\r\n          return (\r\n            <li key={label}>\r\n              <div className={classes.InputArea}>\r\n                <EditLabel label={label} />\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <div className={classes.DoneButton}>\r\n      <Button tooltipTitle=\"Close\" onClick={props.closeEditLabels}>\r\n        Close\r\n      </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    labels: state.main.labels,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewLabel: (label) => dispatch(addNewLabel(label)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditLabels);\r\n","import React from \"react\";\r\nimport classes from \"./Loading.module.css\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={classes.Screen}>\r\n      <div className={classes.loader}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport createHistory from \"history/createBrowserHistory\";\n// import Header from \"./components/Header\";\n// import SideBar from \"./components/SideBar\";\nimport NotesPage from \"./components/NotesPage\";\nimport TrashPage from \"./components/TrashPage\";\nimport ArchivePage from \"./components/ArchivePage\";\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport { connect } from \"react-redux\";\nimport EditLabels from \"./components/EditLabels\";\nimport Backdrop from \"./components/Backdrop\";\nimport Loading from \"./components/Loading\";\n\nexport const history = createHistory({\n  basename: \"/keeper\",\n});\n\nfunction App(props) {\n  const [editingLabels, setEditingLabels] = useState(false);\n\n  function openEditLabels() {\n    setEditingLabels(true);\n  }\n\n  function closeEditLabels() {\n    setEditingLabels(false);\n  }\n\n  const routes = (\n    <Switch>\n      <Route path=\"/\" exact render={(props) => <LoginPage />} />\n      <Route\n        path=\"/notes\"\n        exact\n        render={(props) => (\n          <NotesPage {...props} openEditLabels={openEditLabels} />\n        )}\n      />\n      <Route\n        path=\"/archive\"\n        exact\n        render={(props) => (\n          <ArchivePage {...props} openEditLabels={openEditLabels} />\n        )}\n      />\n      <Route\n        path=\"/trash\"\n        exact\n        render={(props) => (\n          <TrashPage {...props} openEditLabels={openEditLabels} />\n        )}\n      />\n\n      {props.labels.map((label) => {\n        return (\n          <Route\n            key={label}\n            path={\"/label/\" + label}\n            exact\n            render={(props) => (\n              <NotesPage {...props} openEditLabels={openEditLabels} />\n            )}\n          />\n        );\n      })}\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n  return (\n    <Router history={history}>\n      {props.loggingIn ? (\n        <Loading />\n      ) : (\n        <React.Fragment>\n          {editingLabels ? (\n            <EditLabels closeEditLabels={closeEditLabels} />\n          ) : null}\n          <Backdrop\n            show={editingLabels}\n            onClick={closeEditLabels}\n            transparent={false}\n          />\n          {routes}\n        </React.Fragment>\n      )}\n    </Router>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    labels: state.main.labels,\n    loggingIn: state.auth.loggingIn,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// import { loadState } from \"../utils/localStorage\";\r\n// const loadedState = loadState(\"main\");\r\nconst initialState = {\r\n  notes: [],\r\n  labels: [],\r\n  trash: [],\r\n  archive: [],\r\n};\r\n\r\n// loadedState !== null\r\n//   ? loadedState\r\n//   : {\r\n//       notes: [],\r\n//       labels: [],\r\n//       trash: [],\r\n//       archive: [],\r\n//     };\r\n\r\nconst notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_MAIN_STATE\":\r\n      return action.state;\r\n    case \"ADD\":\r\n      return {\r\n        ...state,\r\n        notes: [action.note, ...state.notes],\r\n      };\r\n    case \"ARCHIVE_DIRECTLY\":\r\n      const unpinnedNote1 = { ...action.note, pinned: false };\r\n      return {\r\n        ...state,\r\n        archive: [unpinnedNote1, ...state.archive],\r\n      };\r\n    case \"EDIT\":\r\n      const editedNotes = [...state.notes];\r\n      const editedArchive = [...state.archive];\r\n      let editIndex = state.notes.findIndex((note) => note.id === action.id);\r\n      if (editIndex > -1) {\r\n        editedNotes[editIndex] = action.note;\r\n      } else {\r\n        editIndex = state.archive.findIndex((note) => note.id === action.id);\r\n        if (action.note.pinned) {\r\n          editedArchive.splice(editIndex, 1);\r\n          editedNotes.unshift(action.note);\r\n        } else {\r\n          editedArchive[editIndex] = action.note;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        notes: editedNotes,\r\n        archive: editedArchive,\r\n      };\r\n\r\n    case \"ARCHIVE\":\r\n      const archiveIndex = state.notes.findIndex(\r\n        (note) => note.id === action.note.id\r\n      );\r\n      const archivedNotes = state.notes.filter((note) => {\r\n        return note.id !== action.note.id;\r\n      });\r\n      const pinRemovedNoteArchive = {\r\n        ...state.notes[archiveIndex],\r\n        pinned: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        notes: archivedNotes,\r\n        archive: [pinRemovedNoteArchive, ...state.archive],\r\n      };\r\n    case \"UNARCHIVE\":\r\n      const unarchiveIndex = state.archive.findIndex(\r\n        (note) => note.id === action.note.id\r\n      );\r\n      const unarchivedArchive = state.archive.filter((note) => {\r\n        return note.id !== action.note.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        archive: unarchivedArchive,\r\n        notes: [state.archive[unarchiveIndex], ...state.notes],\r\n      };\r\n    case \"DELETE\":\r\n      const deleteIndex = state.notes.findIndex(\r\n        (note) => note.id === action.id\r\n      );\r\n      let deletedNotes = [...state.notes];\r\n      let deletedTrash = [...state.trash];\r\n      let deletedArchive = [...state.archive];\r\n      if (deleteIndex > -1) {\r\n        deletedNotes = state.notes.filter((note) => {\r\n          return note.id !== action.id;\r\n        });\r\n        const pinRemovedNote = { ...state.notes[deleteIndex], pinned: false };\r\n        deletedTrash = [pinRemovedNote, ...state.trash];\r\n      } else {\r\n        const deleteIndexArchive = state.archive.findIndex(\r\n          (note) => note.id === action.id\r\n        );\r\n        deletedArchive = state.archive.filter((note) => {\r\n          return note.id !== action.id;\r\n        });\r\n        deletedTrash = [state.archive[deleteIndexArchive], ...state.trash];\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        notes: deletedNotes,\r\n        trash: deletedTrash,\r\n        archive: deletedArchive,\r\n      };\r\n    case \"RESTORE\":\r\n      const restoreIndex = state.trash.findIndex(\r\n        (note) => note.id === action.id\r\n      );\r\n      const restoredTrash = state.trash.filter((_, index) => {\r\n        return index !== restoreIndex;\r\n      });\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes, state.trash[restoreIndex]],\r\n        trash: restoredTrash,\r\n      };\r\n    case \"DELETE_PERMANENTLY\":\r\n      const permDeleteIndex = state.trash.findIndex(\r\n        (note) => note.id === action.id\r\n      );\r\n      const newTrash = state.trash.filter((_, index) => {\r\n        return index !== permDeleteIndex;\r\n      });\r\n      return {\r\n        ...state,\r\n        trash: newTrash,\r\n      };\r\n    case \"EMPTY_TRASH\":\r\n      return {\r\n        ...state,\r\n        trash: [],\r\n      };\r\n    case \"ADD_NEW_LABEL\":\r\n      const newLabels =\r\n        state.labels.includes(action.label) || action.label === \"\"\r\n          ? [...state.labels]\r\n          : [action.label, ...state.labels];\r\n      return {\r\n        ...state,\r\n        labels: newLabels,\r\n      };\r\n    case \"EDIT_LABEL\":\r\n      if (!action.newLabel) {\r\n        return state;\r\n      }\r\n      const editLabelIndex = state.labels.indexOf(action.oldLabel);\r\n      const editedLabels = [...state.labels];\r\n      editedLabels[editLabelIndex] = action.newLabel;\r\n\r\n      const editedLabelNotes = state.notes.map((note) => {\r\n        const newLabelsOfNote = note.labels.map((label) => {\r\n          if (label === action.oldLabel) {\r\n            return action.newLabel;\r\n          } else {\r\n            return label;\r\n          }\r\n        });\r\n        return { ...note, labels: newLabelsOfNote };\r\n      });\r\n\r\n      const editedLabelTrash = state.trash.map((note) => {\r\n        const newLabelsOfTrashNote = note.labels.map((label) => {\r\n          if (label === action.oldLabel) {\r\n            return action.newLabel;\r\n          } else {\r\n            return label;\r\n          }\r\n        });\r\n        return { ...note, labels: newLabelsOfTrashNote };\r\n      });\r\n\r\n      const editedLabelArchive = state.archive.map((note) => {\r\n        const newLabelsOfArchiveNote = note.labels.map((label) => {\r\n          if (label === action.oldLabel) {\r\n            return action.newLabel;\r\n          } else {\r\n            return label;\r\n          }\r\n        });\r\n        return { ...note, labels: newLabelsOfArchiveNote };\r\n      });\r\n\r\n      return {\r\n        labels: editedLabels,\r\n        notes: editedLabelNotes,\r\n        trash: editedLabelTrash,\r\n        archive: editedLabelArchive,\r\n      };\r\n    case \"DELETE_LABEL_COMPLETELY\":\r\n      const deletedLabels = state.labels.filter((label) => {\r\n        return label !== action.label;\r\n      });\r\n\r\n      const deletedLabelNotes = state.notes.map((note) => {\r\n        const deletedLabelsOfNote = note.labels.filter((label) => {\r\n          return label !== action.label;\r\n        });\r\n        return { ...note, labels: deletedLabelsOfNote };\r\n      });\r\n\r\n      const deletedLabelTrash = state.trash.map((note) => {\r\n        const deletedLabelsOfTrash = note.labels.filter((label) => {\r\n          return label !== action.label;\r\n        });\r\n        return { ...note, labels: deletedLabelsOfTrash };\r\n      });\r\n\r\n      const deletedLabelArchive = state.archive.map((note) => {\r\n        const deletedLabelsOfArchive = note.labels.filter((label) => {\r\n          return label !== action.label;\r\n        });\r\n        return { ...note, labels: deletedLabelsOfArchive };\r\n      });\r\n      return {\r\n        labels: deletedLabels,\r\n        notes: deletedLabelNotes,\r\n        trash: deletedLabelTrash,\r\n        archive: deletedLabelArchive,\r\n      };\r\n\r\n    case \"ADD_LIST\":\r\n      return {\r\n        ...state,\r\n        notes: [action.list, ...state.notes],\r\n      };\r\n    case \"EDIT_AND_ARCHIVE\":\r\n      const editedAndArchivedNotes = state.notes.filter((note) => {\r\n        return note.id !== action.oldNote.id;\r\n      });\r\n      const unpinnedNote2 = { ...action.newNote, pinned: false };\r\n      const editedAndArchivedArchive = [unpinnedNote2, ...state.archive];\r\n\r\n      return {\r\n        ...state,\r\n        notes: editedAndArchivedNotes,\r\n        archive: editedAndArchivedArchive,\r\n      };\r\n    case \"EDIT_AND_UNARCHIVE\":\r\n      const editedAndUnarchivedArchive = state.archive.filter((note) => {\r\n        return note.id !== action.oldNote.id;\r\n      });\r\n      const editedAndUnarchivedNotes = [action.newNote, ...state.notes];\r\n      return {\r\n        ...state,\r\n        notes: editedAndUnarchivedNotes,\r\n        archive: editedAndUnarchivedArchive,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notesReducer;\r\n","import { loadState } from \"../utils/localStorage\";\r\nconst loadedState = loadState(\"filters\");\r\nconst initialState = (loadedState !== null) ? loadedState : {\r\n  filterColor: \"\",\r\n  filterText: \"\",\r\n};\r\n\r\nconst filtersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FILTER_TEXT\":\r\n      return {\r\n        ...state,\r\n        filterText: action.filterText,\r\n      };\r\n    case \"SET_FILTER_COLOR\":\r\n      return {\r\n        ...state,\r\n        filterColor: action.filterColor,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filtersReducer;\r\n","export const loadState = (name) => {\r\n    try {\r\n        const serializedState = localStorage.getItem(name);\r\n        if (serializedState === null) {\r\n            return null;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const mainSerializedState = JSON.stringify(state.main);\r\n        const filtersSerializedState = JSON.stringify(state.filters);\r\n        localStorage.setItem(\"main\", mainSerializedState);\r\n        localStorage.setItem(\"filters\", filtersSerializedState);\r\n    } catch (err) {\r\n        //ignore errors\r\n    }\r\n}","//syncStatus : \"synced\", \"syncing\", \"failed\"\r\nconst initialState = {\r\n  sidebarOpenMobile: false,\r\n  syncStatus: \"synced\",\r\n};\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_SIDEBAR\":\r\n      return {\r\n        ...state,\r\n        sidebarOpenMobile: true,\r\n      };\r\n    case \"CLOSE_SIDEBAR\":\r\n      return {\r\n        ...state,\r\n        sidebarOpenMobile: false,\r\n      };\r\n    case \"SYNCING_START\":\r\n      return {\r\n        ...state,\r\n        syncStatus: \"syncing\",\r\n      };\r\n    case \"SYNC_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        syncStatus: \"synced\",\r\n      };\r\n    case \"SYNC_FAIL\":\r\n      return {\r\n        ...state,\r\n        syncStatus: \"failed\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","const authReducer = (state = { loggingIn: false, uid: null }, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        loggingIn: true,\r\n        uid: action.uid,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        uid: null,\r\n      };\r\n    case \"SET_LOGGING_IN\":\r\n      return {\r\n        ...state,\r\n        loggingIn: action.truth,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App, { history } from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./store/configureStore\";\r\nimport { login, logout, setLoggingIn } from \"./actions/auth\";\r\nimport Loading from \"./components/Loading\";\r\nimport { createState } from \"./utils/firebaseToState\";\r\nimport { firebase } from \"./firebase/firebase\";\r\nimport { setMainState } from \"./actions/actions\";\r\n\r\n//Init Store\r\nconst store = configureStore();\r\n\r\nlet hasRendered = false;\r\nconst renderApp = () => {\r\n  if (!hasRendered) {\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n    hasRendered = true;\r\n  }\r\n};\r\n\r\n//Initial loading page\r\nReactDOM.render(<Loading />, document.getElementById(\"root\"));\r\n\r\n//Fetch notes from database if authenticated, set redux state, and render app\r\n//If not authenticated, just render app and send to login page\r\nfirebase.auth().onAuthStateChanged((user) => {\r\n  if (user) {\r\n    store.dispatch(login(user.uid));\r\n    const route = \"/users/\" + user.uid;\r\n    // console.log(route);\r\n    firebase\r\n      .database()\r\n      .ref(route)\r\n      .once(\"value\")\r\n      .then((response) => {\r\n        const state = createState(response.val());\r\n        store.dispatch(setMainState(state));\r\n        renderApp();\r\n        if (history.location.pathname === \"/\") {\r\n          history.push(\"/notes\");\r\n        }\r\n        store.dispatch(setLoggingIn(false));\r\n      });\r\n  } else {\r\n    // console.log(\"log out\");\r\n    store.dispatch(logout());\r\n    renderApp();\r\n    history.push(\"/\");\r\n  }\r\n});\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport notesReducer from \"../reducers/notesReducer\";\r\nimport filtersReducer from \"../reducers/filtersReducer\";\r\nimport uiReducer from \"../reducers/uiReducer\";\r\nimport authReducer from \"../reducers/authReducer\";\r\n\r\nconst configureStore = () =>\r\n  createStore(\r\n    combineReducers({\r\n      main: notesReducer,\r\n      filters: filtersReducer,\r\n      ui: uiReducer,\r\n      auth: authReducer,\r\n    }),\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\nexport default configureStore;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Frame\":\"ColorPopper_Frame__3Cn81\",\"Button\":\"ColorPopper_Button__OKYMU\",\"white\":\"ColorPopper_white__2wRst\",\"red\":\"ColorPopper_red__io595\",\"orange\":\"ColorPopper_orange__2I-hf\",\"yellow\":\"ColorPopper_yellow__CEE--\",\"green\":\"ColorPopper_green__3R19K\",\"turquoise\":\"ColorPopper_turquoise__mzQI0\",\"blue\":\"ColorPopper_blue__IpjDh\",\"darkblue\":\"ColorPopper_darkblue__bWOWE\",\"purple\":\"ColorPopper_purple__3OiiW\",\"pink\":\"ColorPopper_pink__19GCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotesPage\":\"TrashPage_NotesPage__3xqGo\",\"Notes\":\"TrashPage_Notes__f-m4H\",\"Empty\":\"TrashPage_Empty__VwZV5\",\"Icon\":\"TrashPage_Icon__3wBV3\",\"Note\":\"TrashPage_Note__1d3S7\",\"Button\":\"TrashPage_Button__juA3P\",\"SearchResult\":\"TrashPage_SearchResult__2-wIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotesPage\":\"ArchivePage_NotesPage__2DkZp\",\"Notes\":\"ArchivePage_Notes__2KgiM\",\"NotesWhenPinned\":\"ArchivePage_NotesWhenPinned__1g_E2\",\"Empty\":\"ArchivePage_Empty__Osefq\",\"SearchResult\":\"ArchivePage_SearchResult__3Yk1f\",\"Icon\":\"ArchivePage_Icon__2HEtw\",\"Note\":\"ArchivePage_Note__3hkUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"EditLabels_Form__wvewR\",\"InputArea\":\"EditLabels_InputArea__36FtZ\",\"Item\":\"EditLabels_Item__DFr53\",\"Buttons\":\"EditLabels_Buttons__1e28F\",\"DoneButton\":\"EditLabels_DoneButton__12quP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkbox\":\"ListItem_Checkbox__1bNEb\",\"NotEditable\":\"ListItem_NotEditable__38Wcs\",\"Editable\":\"ListItem_Editable__3WrDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__3Iz00\",\"NavigationItems\":\"SideBar_NavigationItems__14vzp\",\"Open\":\"SideBar_Open__2IKo7\",\"Close\":\"SideBar_Close__2dS8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"EditLabel_Input__3mZtk\",\"InputArea\":\"EditLabel_InputArea__3dYs-\",\"Button\":\"EditLabel_Button__gsqi2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"AddLabels_List__2kPbx\",\"Input\":\"AddLabels_Input__t4eqC\",\"InputArea\":\"AddLabels_InputArea__UbBXK\",\"Checkbox\":\"AddLabels_Checkbox__1CFK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Screen\":\"LoginPage_Screen__2UsYO\",\"Form\":\"LoginPage_Form__3d3O-\",\"ButtonArea\":\"LoginPage_ButtonArea__3wJ8s\"};"],"sourceRoot":""}